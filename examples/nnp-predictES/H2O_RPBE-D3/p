Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 18.46      2.83     2.83 766232034     0.00     0.00  nnp::Derivatives::free()
 14.35      5.03     2.20 217390590     0.00     0.00  nnp::Derivatives::operator=(nnp::Derivatives const&)
  9.56      6.50     1.47 329861145     0.00     0.00  nnp::Derivatives::Derivatives(int, int)
  6.65      7.52     1.02      113     0.01     0.01  nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const
  5.02      8.29     0.77 75530432     0.00     0.00  nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double)
  4.63      9.00     0.71 56236896     0.00     0.00  nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const
  3.85      9.59     0.59 47002676     0.00     0.00  nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const
  3.85     10.18     0.59 47827772     0.00     0.00  nnp::Derivatives::computeProd(double, nnp::Derivatives&) const
  3.03     10.64     0.47 75530432     0.00     0.00  nnp::Derivatives::computednRij2_6(double const*)
  2.25     10.99     0.35 38593552     0.00     0.00  nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&)
  2.19     11.32     0.34 114952320     0.00     0.00  nnp::Derivatives::Derivatives(int, int) [clone .constprop.26]
  2.02     11.63     0.31        2     0.16     0.17  nnp::Structure::readFromFile(std::string)
  1.96     11.93     0.30    12960     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const
  1.83     12.21     0.28 57061992     0.00     0.00  nnp::CutoffFunction::dnfTANHU(double, int) const
  1.79     12.49     0.28 19296776     0.00     0.00  nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*)
  1.53     12.72     0.24 27702660     0.00     0.00  nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19]
  1.37     12.93     0.21 38593552     0.00     0.00  nnp::Derivatives::build9VFrom6V(int, nnp::Derivatives&)
  1.24     13.12     0.19 56236896     0.00     0.00  nnp::Derivatives::computeProdThird(nnp::Derivatives const&, nnp::Derivatives&) const
  1.24     13.31     0.19 19296776     0.00     0.00  nnp::Derivatives::Derivatives(int, int, double const*, double)
  1.14     13.49     0.18  9234220     0.00     0.00  nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&)
  1.04     13.65     0.16 47002676     0.00     0.00  nnp::Derivatives::computeSumFourth(double, double, nnp::Derivatives const&, nnp::Derivatives&) const
  0.85     13.78     0.13 56236896     0.00     0.00  nnp::Derivatives::computeProdSecond(nnp::Derivatives const&, nnp::Derivatives&) const
  0.75     13.89     0.12  9234220     0.00     0.00  nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17]
  0.72     14.00     0.11  9234220     0.00     0.00  nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, int, double)
  0.65     14.10     0.10        1     0.10     0.10  nnp::Mode::computedDipole(nnp::Structure&) const
  0.62     14.20     0.10 38593552     0.00     0.00  nnp::Derivatives::computed4fu(double const*, nnp::Derivatives const&)
  0.62     14.29     0.10  9234220     0.00     0.00  nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16]
  0.59     14.38     0.09                             nnp::Derivatives::Derivatives(int)
  0.52     14.46     0.08 47002676     0.00     0.00  nnp::Derivatives::computeSumThird(double, double, nnp::Derivatives const&, nnp::Derivatives&) const
  0.52     14.54     0.08   394182     0.00     0.00  nnp::pow_int(double, int)
  0.46     14.61     0.07 38593552     0.00     0.00  nnp::Derivatives::computed3fu(double const*, nnp::Derivatives const&)
  0.46     14.68     0.07  9234220     0.00     0.00  nnp::Derivatives::computecosijk(double const*, double const*)
  0.46     14.75     0.07  9234220     0.00     0.00  nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*)
  0.46     14.82     0.07    71990     0.00     0.00  nnp::CutoffFunction::fdfTANHU(double, double&, double&) const
  0.39     14.88     0.06 56236896     0.00     0.00  nnp::Derivatives::computeProdFourth(nnp::Derivatives const&, nnp::Derivatives&) const
  0.39     14.94     0.06    30240     0.00     0.00  nnp::NeuralNetwork::calculatedEdG(double**, int) const
  0.36     15.00     0.06    33548     0.00     0.00  nnp::Derivatives::~Derivatives()
  0.33     15.05     0.05  9234220     0.00     0.00  nnp::Derivatives::computednRijk(double const*, double const*)
  0.33     15.10     0.05  9234220     0.00     0.00  nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double)
  0.33     15.15     0.05     2160     0.00     0.00  nnp::NeuralNetwork::calculateDEdG(double*) const
  0.20     15.18     0.03                             nnp::Derivatives::computed4Rij2_6()
  0.20     15.21     0.03                             nnp::Derivatives::Derivatives(nnp::Derivatives const&)
  0.13     15.23     0.02    17280     0.00     0.00  nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const
  0.13     15.25     0.02     5275     0.00     0.00  void std::vector<nnp::Atom::Neighbor, std::allocator<nnp::Atom::Neighbor> >::_M_emplace_back_aux<nnp::Atom::Neighbor>(nnp::Atom::Neighbor&&)
  0.07     15.26     0.01    12960     0.00     0.00  nnp::NeuralNetwork::propagateLayer(nnp::NeuralNetwork::Layer&, nnp::NeuralNetwork::Layer&)
  0.07     15.27     0.01     5346     0.00     0.00  nnp::reduce(std::string const&, std::string const&, std::string const&)
  0.07     15.28     0.01     5238     0.00     0.00  nnp::split(std::string const&, char)
  0.07     15.29     0.01       42     0.00     0.00  nnp::Atom::getNumNeighbors(double) const
  0.07     15.30     0.01                             nnp::appendLinesToFile(_IO_FILE* const&, std::vector<std::string, std::allocator<std::string> >)
  0.07     15.31     0.01                             nnp::Derivatives::computeSumSecond(double, double, nnp::Derivatives const&, nnp::Derivatives&) const
  0.07     15.32     0.01                             nnp::CutoffFunction::fdfTANH(double, double&, double&) const
  0.03     15.32     0.01                             getListPermutation(int*, int, int&) [clone .constprop.13]
  0.03     15.33     0.01                             nnp::Derivatives::computecosijk(double, double, double const*, double const*)
  0.03     15.33     0.01                             nnp::Derivatives::Derivatives(int, double, double const*, double, nnp::CutoffFunction const&)
  0.00     15.33     0.00   828336     0.00     0.00  nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, double)
  0.00     15.33     0.00   828336     0.00     0.00  nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&)
  0.00     15.33     0.00    58184     0.00     0.00  nnp::Atom::Neighbor::Neighbor()
  0.00     15.33     0.00    34563     0.00     0.00  nnp::Derivatives::reset()
  0.00     15.33     0.00    30240     0.00     0.00  nnp::Derivatives::addTodF(nnp::Derivatives const&, nnp::Derivatives const*, int*, int)
  0.00     15.33     0.00    30240     0.00     0.00  nnp::Derivatives::addTod1F(nnp::Derivatives const&, nnp::Derivatives const*, int*)
  0.00     15.33     0.00    23107     0.00     0.00  void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&)
  0.00     15.33     0.00    10167     0.00     0.00  nnp::strpr(char const*, ...)
  0.00     15.33     0.00    10148     0.00     0.00  nnp::Log::addLogEntry(std::string const&)
  0.00     15.33     0.00     9890     0.00     0.00  std::string const& nnp::safeFind<unsigned long, std::string>(std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > > const&, std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::key_type const&)
  0.00     15.33     0.00     9890     0.00     0.00  nnp::ElementMap::symbol(unsigned long) const
  0.00     15.33     0.00     9868     0.00     0.00  nnp::Log::operator<<(std::string const&)
  0.00     15.33     0.00     4830     0.00     0.00  void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long const&>(unsigned long const&)
  0.00     15.33     0.00     4716     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::find(std::string const&) const
  0.00     15.33     0.00     4320     0.00     0.00  nnp::NeuralNetwork::propagate()
  0.00     15.33     0.00     4320     0.00     0.00  nnp::NeuralNetwork::setInput(double const* const&) const
  0.00     15.33     0.00     4320     0.00     0.00  nnp::NeuralNetwork::getOutput(double*) const
  0.00     15.33     0.00     4270     0.00     0.00  std::vector<nnp::Vec3D, std::allocator<nnp::Vec3D> >::_M_default_append(unsigned long)
  0.00     15.33     0.00     3594     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const
  0.00     15.33     0.00     3240     0.00     0.00  nnp::Derivatives::operator+=(nnp::Derivatives const&)
  0.00     15.33     0.00     3240     0.00     0.00  nnp::Derivatives::operator*(nnp::Derivatives const&) const
  0.00     15.33     0.00     2358     0.00     0.00  unsigned long const& nnp::safeFind<std::string, unsigned long>(std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > > const&, std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::key_type const&)
  0.00     15.33     0.00     2358     0.00     0.00  nnp::ElementMap::index(std::string const&) const
  0.00     15.33     0.00     1684     0.00     0.00  std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const
  0.00     15.33     0.00     1524     0.00     0.00  nnp::SymmetryFunction::scale(double) const
  0.00     15.33     0.00     1080     0.00     0.00  nnp::Derivatives::compute(nnp::NeuralNetwork const*)
  0.00     15.33     0.00     1080     0.00     0.00  nnp::Atom::Atom()
  0.00     15.33     0.00     1080     0.00     0.00  nnp::Structure::remap(nnp::Atom&)
  0.00     15.33     0.00     1080     0.00     0.00  nnp::NeuralNetwork::getNumNeurons(int) const
  0.00     15.33     0.00     1080     0.00     0.00  nnp::NeuralNetwork::calculateDnEdGn(double*, double**, double***, double****) const
  0.00     15.33     0.00     1080     0.00     0.00  void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::emplace_back<nnp::Atom>(nnp::Atom&&)
  0.00     15.33     0.00      773     0.00     0.00  std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&)
  0.00     15.33     0.00      741     0.00     0.00  std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.103]
  0.00     15.33     0.00      628     0.00     0.00  std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107]
  0.00     15.33     0.00      238     0.00     0.00  nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const
  0.00     15.33     0.00      181     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const
  0.00     15.33     0.00      175     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
  0.00     15.33     0.00      139     0.00     0.00  std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&)
  0.00     15.33     0.00      123     0.00     0.00  nnp::CutoffFunction::setCutoffParameter(double)
  0.00     15.33     0.00      116     0.00     0.00  nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const
  0.00     15.33     0.00      109     0.00     0.00  std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, unsigned long> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_insert_equal<std::pair<std::string, std::pair<std::string, unsigned long> > >(std::pair<std::string, std::pair<std::string, unsigned long> >&&)
  0.00     15.33     0.00       98     0.00     0.00  nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*)
  0.00     15.33     0.00       80     0.00     0.00  void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&)
  0.00     15.33     0.00       75     0.00     0.00  std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
  0.00     15.33     0.00       74     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*)
  0.00     15.33     0.00       74     0.00     0.00  std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*)
  0.00     15.33     0.00       72     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*)
  0.00     15.33     0.00       72     0.00     0.00  std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*)
  0.00     15.33     0.00       67     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::equal_range(std::string const&) const
  0.00     15.33     0.00       66     0.00     0.00  nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType)
  0.00     15.33     0.00       66     0.00     0.00  nnp::CutoffFunction::setCutoffRadius(double)
  0.00     15.33     0.00       66     0.00     0.00  nnp::CutoffFunction::CutoffFunction()
  0.00     15.33     0.00       65     0.00     0.00  std::_Rb_tree_iterator<std::pair<std::string const, std::string> > std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string> >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&)
  0.00     15.33     0.00       61     0.00     0.00  std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::operator[](std::string&&)
  0.00     15.33     0.00       57     0.00     0.00  nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double)
  0.00     15.33     0.00       57     0.00     0.00  nnp::SymmetryFunction::setCutoffFunction(nnp::CutoffFunction::CutoffType, double)
  0.00     15.33     0.00       57     0.00     0.00  nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&)
  0.00     15.33     0.00       57     0.00     0.00  nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&)
  0.00     15.33     0.00       57     0.00     0.00  nnp::SymmetryFunction::getPrintFormat() const
  0.00     15.33     0.00       57     0.00     0.00  nnp::SymmetryFunctionGroup::getPrintFormatMember() const
  0.00     15.33     0.00       56     0.00     0.00  nnp::Atom::allocate(bool)
  0.00     15.33     0.00       51     0.00     0.02  nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const
  0.00     15.33     0.00       48     0.00     0.02  nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*)
  0.00     15.33     0.00       34     0.00     0.00  nnp::Derivatives::Derivatives()
  0.00     15.33     0.00       33     0.00     0.00  void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&)
  0.00     15.33     0.00       32     0.00     0.00  nnp::SymmetryFunctionRadial::setParameters(std::string const&)
  0.00     15.33     0.00       32     0.00     0.00  nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&)
  0.00     15.33     0.00       32     0.00     0.00  nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial()
  0.00     15.33     0.00       32     0.00     0.00  nnp::SymmetryFunctionRadial::parameterLine() const
  0.00     15.33     0.00       29     0.00     0.00  std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, std::string> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<std::string, std::string> > >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&)
  0.00     15.33     0.00       25     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&)
  0.00     15.33     0.00       25     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&)
  0.00     15.33     0.00       25     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow()
  0.00     15.33     0.00       25     0.00     0.00  nnp::SymmetryFunctionAngularNarrow::parameterLine() const
  0.00     15.33     0.00       21     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const
  0.00     15.33     0.00       17     0.00     0.07  void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&)
  0.00     15.33     0.00       17     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00     15.33     0.00       16     0.00     0.00  void std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionRadial const* const&>(nnp::SymmetryFunctionRadial const* const&)
  0.00     15.33     0.00       13     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::operator<(nnp::SymmetryFunctionGroup const&) const
  0.00     15.33     0.00       12     0.00     0.00  void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::_M_emplace_back_aux<nnp::Atom>(nnp::Atom&&)
  0.00     15.33     0.00       12     0.00     0.00  void std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> >::_M_emplace_back_aux<nnp::SymmetryFunction*>(nnp::SymmetryFunction*&&)
  0.00     15.33     0.00       10     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool)
  0.00     15.33     0.00        9     0.00     0.00  nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&)
  0.00     15.33     0.00        9     0.00     0.00  nnp::SymmetryFunctionGroup::getPrintFormatCommon() const
  0.00     15.33     0.00        9     0.00     0.00  void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag)
  0.00     15.33     0.00        8     0.00     0.00  nnp::ElementMap::atomicNumber(std::string const&)
  0.00     15.33     0.00        8     0.00     0.00  nnp::NeuralNetwork::allocateLayer(nnp::NeuralNetwork::Layer&, int, int, nnp::NeuralNetwork::ActivationFunction)
  0.00     15.33     0.00        7     0.00     0.00  nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&)
  0.00     15.33     0.00        7     0.00     0.00  nnp::Settings::keywordExists(std::string const&) const
  0.00     15.33     0.00        7     0.00     0.00  void std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> >::_M_emplace_back_aux<nnp::SymmetryFunctionGroup*>(nnp::SymmetryFunctionGroup*&&)
  0.00     15.33     0.00        6     0.00     0.00  nnp::Settings::operator[](std::string const&) const
  0.00     15.33     0.00        5     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::sortMembers()
  0.00     15.33     0.00        5     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::setScalingFactors()
  0.00     15.33     0.00        5     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&)
  0.00     15.33     0.00        5     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow()
  0.00     15.33     0.00        5     0.00     0.00  nnp::Element::~Element()
  0.00     15.33     0.00        5     0.00     0.00  nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const
  0.00     15.33     0.00        5     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*)
  0.00     15.33     0.00        5     0.00     0.00  std::_Rb_tree<unsigned long, std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container>, std::_Select1st<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >*)
  0.00     15.33     0.00        5     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.197]
  0.00     15.33     0.00        5     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.185]
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::sortMembers()
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::setScalingFactors()
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&)
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial()
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::parameterLines() const
  0.00     15.33     0.00        4     0.00     0.00  nnp::SymmetryFunctionGroupRadial::operator<(nnp::SymmetryFunctionGroup const&) const
  0.00     15.33     0.00        4     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.151]
  0.00     15.33     0.00        4     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.139]
  0.00     15.33     0.00        3     0.00     0.00  nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool)
  0.00     15.33     0.00        3     0.00     0.00  nnp::DFTD3::DFTD3()
  0.00     15.33     0.00        3     0.00     0.00  nnp::Mode::calculateCharge(nnp::Structure&) const
  0.00     15.33     0.00        3     0.00     0.02  nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const
  0.00     15.33     0.00        2     0.00     0.00  nnp::NeuralNetwork::setConnections(double const* const&)
  0.00     15.33     0.00        2     0.00     0.00  nnp::NeuralNetwork::setNormalizeNeurons(bool)
  0.00     15.33     0.00        2     0.00     0.00  nnp::NeuralNetwork::NeuralNetwork(int, int const* const&, nnp::NeuralNetwork::ActivationFunction const* const&)
  0.00     15.33     0.00        2     0.00     0.00  nnp::NeuralNetwork::~NeuralNetwork()
  0.00     15.33     0.00        2     0.00     0.00  nnp::SymmetryFunctionStatistics::SymmetryFunctionStatistics()
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double)
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::sortSymmetryFunctions()
  0.00     15.33     0.00        2     0.00     0.59  nnp::Element::setupSymmetryFunctionGroups()
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::Element(nnp::Element const&)
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::Element(unsigned long, nnp::ElementMap const&)
  0.00     15.33     0.00        2     0.00     0.00  nnp::NeuralNetwork::info() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Mode::calculateDipole(nnp::Structure&) const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::setScalingNone() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::getMinNeighbors() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::getMaxCutoffRadius() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::getMinCutoffRadius() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::infoSymmetryFunctionGroups() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Element::infoSymmetryFunctionParameters() const
  0.00     15.33     0.00        2     0.00     0.00  nnp::Settings::getValues(std::string const&) const
  0.00     15.33     0.00        2     0.00     0.00  void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&)
  0.00     15.33     0.00        2     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::~vector()
  0.00     15.33     0.00        2     0.00     0.00  std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&)
  0.00     15.33     0.00        2     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_get_insert_unique_pos(std::string const&)
  0.00     15.33     0.00        2     0.00     0.00  std::_Rb_tree_iterator<std::pair<std::string const, unsigned long> > std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<std::string const&>&&, std::tuple<>&&)
  0.00     15.33     0.00        2     0.00     0.00  std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, std::string> >, unsigned long const&)
  0.00     15.33     0.00        2     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.168]
  0.00     15.33     0.00        2     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153]
  0.00     15.33     0.00        2     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156]
  0.00     15.33     0.00        2     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.141]
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z22createKnownKeywordsMapv
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6timingRdS_
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp10ElementMap13knownElementsE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp10new1DtableEi
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp11DerivativesC2Ev
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp12PredictionESC2Ev
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp13NeuralNetworkC2EiRKPKiRKPKNS0_18ActivationFunctionE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp16SymmetryFunction11sfinfoWidthE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp21SymmetryFunctionGroup11printFormatE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp22SymmetryFunctionRadialC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionAngularWideC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionGroupRadialC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp29SymmetryFunctionAngularNarrowC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp30SymmetryFunctionWeightedRadialC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp31SymmetryFunctionWeightedAngularC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp32SymmetryFunctionGroupAngularWideC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp34SymmetryFunctionGroupAngularNarrowC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp35SymmetryFunctionGroupWeightedRadialC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp36SymmetryFunctionGroupWeightedAngularC2ERKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp3LogC2Ev
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp4ModeC2Ev
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp5DFTD3C2Ev
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp7ElementC2EmRKNS_10ElementMapE
  0.00     15.33     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN3nnp9StructureC2Ev
  0.00     15.33     0.00        1     0.00     0.00  nnp::ElementMap::registerElements(std::string const&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Log::Log()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::initialize()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupDFTD3()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupCutoff()
  0.00     15.33     0.00        1     0.00     1.18  nnp::Mode::setupGeneric()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupElements()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupElementMap()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::loadSettingsFile(std::string const&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupNeuralNetwork()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupNormalization()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupSymmetryFunctions()
  0.00     15.33     0.00        1     0.00     0.01  nnp::Mode::setupNeuralNetworkWeights(std::string const&)
  0.00     15.33     0.00        1     0.00     1.18  nnp::Mode::setupSymmetryFunctionGroups()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::setupSymmetryFunctionScalingNone()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::Mode()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Settings::parseLines()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Settings::sanityCheck()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Settings::loadFile(std::string const&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Settings::readFile()
  0.00     15.33     0.00        1     0.00     0.01  nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Structure::setElementMap(nnp::ElementMap const&)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Structure::calculateInverseBox()
  0.00     15.33     0.00        1     0.00     0.17  nnp::Structure::calculateNeighborList(double)
  0.00     15.33     0.00        1     0.00     0.00  nnp::Structure::reset()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Structure::Structure()
  0.00     15.33     0.00        1     0.00     0.00  nnp::Mode::computeHighDerivativesDipole(nnp::Structure&, int, int) const
  0.00     15.33     0.00        1     0.00    13.45  nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const
  0.00     15.33     0.00        1     0.00     0.00  nnp::Settings::info() const
  0.00     15.33     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, unsigned long> > >*)
  0.00     15.33     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_get_insert_unique_pos(std::string const&)
  0.00     15.33     0.00        1     0.00     0.00  std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_get_insert_unique_pos(std::string const&)
  0.00     15.33     0.00        1     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)) [clone .constprop.93]
  0.00     15.33     0.00        1     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)) [clone .constprop.81]

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.07% of 15.33 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     87.8    0.00   13.47                 nnp::PredictionES::getHighDerivatives(int, int) [1]
                0.00   13.45       1/1           nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.02       1/3           nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
                0.00    0.00       1/3           nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool) [199]
                0.00    0.00       1/3           nnp::Mode::calculateCharge(nnp::Structure&) const [201]
                0.00    0.00       1/2           nnp::Mode::calculateDipole(nnp::Structure&) const [212]
                0.00    0.00       1/1           nnp::Mode::computeHighDerivativesDipole(nnp::Structure&, int, int) const [265]
-----------------------------------------------
                0.00   13.45       1/1           nnp::PredictionES::getHighDerivatives(int, int) [1]
[2]     87.7    0.00   13.45       1         nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.30   12.74   12960/12960       nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.02    0.32   17280/17280       nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
                0.00    0.06    1080/1080        nnp::Derivatives::compute(nnp::NeuralNetwork const*) [53]
                0.01    0.00    3308/33548       nnp::Derivatives::~Derivatives() [56]
                0.00    0.00    1080/4320        nnp::NeuralNetwork::propagate() [66]
                0.00    0.00   30274/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.00    0.00    3240/3240        nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.00    0.00    3240/3240        nnp::Derivatives::operator*(nnp::Derivatives const&) const [87]
                0.00    0.00    3308/766232034     nnp::Derivatives::free() [7]
                0.00    0.00      37/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.00    0.00   30240/30240       nnp::Derivatives::addTodF(nnp::Derivatives const&, nnp::Derivatives const*, int*, int) [107]
                0.00    0.00    4323/34563       nnp::Derivatives::reset() [106]
                0.00    0.00    1080/4320        nnp::NeuralNetwork::setInput(double const* const&) const [117]
                0.00    0.00      34/34          nnp::Derivatives::Derivatives() [156]
-----------------------------------------------
                0.30   12.74   12960/12960       nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[3]     85.1    0.30   12.74   12960         nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.18   12.43 9234220/9234220     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.11    0.00 9234220/9234220     nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, int, double) [43]
                0.02    0.00   12960/33548       nnp::Derivatives::~Derivatives() [56]
                0.00    0.00   12960/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.00    0.00   12960/766232034     nnp::Derivatives::free() [7]
                0.00    0.00   12960/34563       nnp::Derivatives::reset() [106]
-----------------------------------------------
                0.18   12.43 9234220/9234220     nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
[4]     82.2    0.18   12.43 9234220         nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.05    4.69 9234220/9234220     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.07    3.91 9234220/9234220     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.07    1.70 9234220/9234220     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.47    0.08 46171100/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.25    0.00 55405320/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.24    0.00 64639540/766232034     nnp::Derivatives::free() [7]
                0.23    0.00 18468440/47827772     nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [28]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.08    0.04 9234220/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
                0.03    0.00 9234220/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.05    4.69 9234220/9234220     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
[5]     30.9    0.05    4.69 9234220         nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.18    2.39 18468440/19296776     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.10    1.22 9234220/9234220     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.23    0.09 18468440/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
                0.19    0.03 18468440/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.17    0.00 46171100/766232034     nnp::Derivatives::free() [7]
                0.08    0.00 18468440/329861145     nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.07    3.91 9234220/9234220     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
[6]     25.9    0.07    3.91 9234220         nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.26    1.77 18468440/19296776     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.12    0.91 9234220/9234220     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.21    0.00 46171100/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.17    0.00 46171100/766232034     nnp::Derivatives::free() [7]
                0.09    0.02 9234220/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
-----------------------------------------------
                0.00    0.00    3240/766232034     nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.00    0.00    3308/766232034     nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.00   12960/766232034     nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.00    0.00   17280/766232034     nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
                0.02    0.00 4141680/766232034     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.07    0.00 18468440/766232034     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.10    0.00 27702660/766232034     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.14    0.00 36936880/766232034     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.17    0.00 46171100/766232034     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.17    0.00 46171100/766232034     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.20    0.00 55405320/766232034     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.21    0.00 57061992/766232034     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.21    0.00 57890328/766232034     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.24    0.00 64639540/766232034     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.36    0.00 96483880/766232034     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.38    0.00 104061462/766232034     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.56    0.00 151060864/766232034     nnp::Derivatives::computednRij2_6(double const*) [10]
[7]     18.5    2.83    0.00 766232034         nnp::Derivatives::free() [7]
-----------------------------------------------
                0.01    0.11  828336/19296776     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.18    2.39 18468440/19296776     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
[8]     17.5    0.19    2.50 19296776         nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.12    0.46 19296776/75530432     nnp::Derivatives::computednRij2_6(double const*) [10]
                0.20    0.17 19296776/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.36    0.00 96483880/766232034     nnp::Derivatives::free() [7]
                0.24    0.10 19296776/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
                0.24    0.00 19296776/47827772     nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [28]
                0.20    0.03 19296776/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.17    0.00 38593552/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.11    0.00 38593552/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
                0.11    0.00 19296776/38593552     nnp::Derivatives::build9VFrom6V(int, nnp::Derivatives&) [35]
-----------------------------------------------
                0.00    0.00    3240/217390590     nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.00    0.00   30274/217390590     nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.02    0.00 1656672/217390590     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.09    0.02 9234220/217390590     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.09    0.02 9234220/217390590     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.09    0.02 9234220/217390590     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.19    0.03 18468440/217390590     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.20    0.03 19296776/217390590     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.29    0.05 28530996/217390590     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.47    0.08 46171100/217390590     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.76    0.13 75530432/217390590     nnp::Derivatives::computednRij2_6(double const*) [10]
[9]     16.9    2.20    0.38 217390590         nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.38    0.00 104061462/766232034     nnp::Derivatives::free() [7]
-----------------------------------------------
                0.06    0.22 9234220/75530432     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.12    0.46 19296776/75530432     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.12    0.46 19296776/75530432     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.17    0.66 27702660/75530432     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
[10]    14.7    0.47    1.79 75530432         nnp::Derivatives::computednRij2_6(double const*) [10]
                0.76    0.13 75530432/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.56    0.00 151060864/766232034     nnp::Derivatives::free() [7]
                0.34    0.00 75530432/329861145     nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.01    0.08  828336/19296776     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.26    1.77 18468440/19296776     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
[11]    13.9    0.28    1.85 19296776         nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.12    0.46 19296776/75530432     nnp::Derivatives::computednRij2_6(double const*) [10]
                0.20    0.17 19296776/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.17    0.08 19296776/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
                0.21    0.00 57890328/766232034     nnp::Derivatives::free() [7]
                0.19    0.00 38593552/57061992     nnp::CutoffFunction::dnfTANHU(double, int) const [34]
                0.11    0.00 19296776/38593552     nnp::Derivatives::build9VFrom6V(int, nnp::Derivatives&) [35]
                0.09    0.00 19296776/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.06    0.00 19296776/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.07    1.70 9234220/9234220     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
[12]    11.5    0.07    1.70 9234220         nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.08    0.34 9234220/27702660     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.06    0.22 9234220/75530432     nnp::Derivatives::computednRij2_6(double const*) [10]
                0.20    0.00 55405320/766232034     nnp::Derivatives::free() [7]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.09    0.02 9234220/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.08    0.00 18468440/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.05    0.00 9234220/9234220     nnp::Derivatives::computednRijk(double const*, double const*) [57]
                0.03    0.00 9234220/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.00    0.00      37/329861145     nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.00    3240/329861145     nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.00    0.00    3240/329861145     nnp::Derivatives::operator*(nnp::Derivatives const&) const [87]
                0.00    0.00   12960/329861145     nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.00    0.00   17280/329861145     nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
                0.01    0.00 1656672/329861145     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.04    0.00 9234220/329861145     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.08    0.00 18468440/329861145     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.08    0.00 18468440/329861145     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.08    0.00 18468440/329861145     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.09    0.00 19296776/329861145     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.13    0.00 28530996/329861145     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.17    0.00 38593552/329861145     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.21    0.00 46171100/329861145     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.25    0.00 55405320/329861145     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.34    0.00 75530432/329861145     nnp::Derivatives::computednRij2_6(double const*) [10]
[13]     9.6    1.47    0.00 329861145         nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.09    0.08 9234220/75530432     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.09    0.08 9234220/75530432     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.20    0.17 19296776/75530432     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.20    0.17 19296776/75530432     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
[14]     9.4    0.77    0.68 75530432         nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.29    0.05 28530996/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.21    0.00 57061992/766232034     nnp::Derivatives::free() [7]
                0.13    0.00 28530996/329861145     nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.10    1.22 9234220/9234220     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
[15]     8.6    0.10    1.22 9234220         nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.08    0.34 9234220/27702660     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.12    0.05 9234220/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
                0.14    0.00 36936880/766232034     nnp::Derivatives::free() [7]
                0.11    0.00 9234220/47827772     nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [28]
                0.09    0.02 9234220/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.08    0.00 18468440/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.03    0.00 9234220/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.08    0.34 9234220/27702660     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.08    0.34 9234220/27702660     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.08    0.34 9234220/27702660     nnp::Derivatives::computecosijk(double const*, double const*) [12]
[16]     8.1    0.24    1.01 27702660         nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.17    0.66 27702660/75530432     nnp::Derivatives::computednRij2_6(double const*) [10]
                0.10    0.00 27702660/766232034     nnp::Derivatives::free() [7]
                0.08    0.00 27702660/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                                                 <spontaneous>
[17]     7.8    0.00    1.19                 nnp::PredictionES::setup() [17]
                0.00    1.18       1/1           nnp::Mode::setupGeneric() [18]
                0.00    0.01       1/1           nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
                0.00    0.00       1/1           nnp::Mode::setupSymmetryFunctionScalingNone() [81]
                0.00    0.00       1/1           nnp::Mode::loadSettingsFile(std::string const&) [82]
                0.00    0.00       1/1           nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       1/1           nnp::Mode::initialize() [254]
-----------------------------------------------
                0.00    1.18       1/1           nnp::PredictionES::setup() [17]
[18]     7.7    0.00    1.18       1         nnp::Mode::setupGeneric() [18]
                0.00    1.18       1/1           nnp::Mode::setupSymmetryFunctionGroups() [22]
                0.00    0.00       1/1           nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00       1/1           nnp::Mode::setupElements() [88]
                0.00    0.00       1/1           nnp::Mode::setupElementMap() [91]
                0.00    0.00       1/1           nnp::Mode::setupCutoff() [92]
                0.00    0.00       1/1           nnp::Mode::setupNormalization() [256]
                0.00    0.00       1/1           nnp::Mode::setupDFTD3() [255]
-----------------------------------------------
                0.00    1.18      48/48          nnp::Element::setupSymmetryFunctionGroups() [21]
[19]     7.7    0.00    1.18      48         nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
                0.00    1.18      17/17          void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&) [20]
                0.00    0.00       5/66          nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType) [146]
                0.00    0.00       5/66          nnp::CutoffFunction::setCutoffRadius(double) [147]
                0.00    0.00       5/123         nnp::CutoffFunction::setCutoffParameter(double) [136]
-----------------------------------------------
                0.00    1.18      17/17          nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
[20]     7.7    0.00    1.18      17         void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&) [20]
                0.00    1.17      51/51          nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const [23]
                0.01    0.00      42/42          nnp::Atom::getNumNeighbors(double) const [67]
                0.00    0.00      56/56          nnp::Atom::allocate(bool) [155]
-----------------------------------------------
                0.00    1.18       2/2           nnp::Mode::setupSymmetryFunctionGroups() [22]
[21]     7.7    0.00    1.18       2         nnp::Element::setupSymmetryFunctionGroups() [21]
                0.00    1.18      48/48          nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
                0.00    0.00      98/98          nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
                0.00    0.00       7/7           void std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> >::_M_emplace_back_aux<nnp::SymmetryFunctionGroup*>(nnp::SymmetryFunctionGroup*&&) [179]
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&) [183]
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&) [193]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
                0.00    0.00       2/2           void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.141] [228]
                0.00    0.00       2/2           void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153] [226]
-----------------------------------------------
                0.00    1.18       1/1           nnp::Mode::setupGeneric() [18]
[22]     7.7    0.00    1.18       1         nnp::Mode::setupSymmetryFunctionGroups() [22]
                0.00    1.18       2/2           nnp::Element::setupSymmetryFunctionGroups() [21]
                0.00    0.00      33/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       2/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/7           nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
                0.00    0.00       2/2           nnp::Element::infoSymmetryFunctionGroups() const [216]
-----------------------------------------------
                0.00    1.17      51/51          void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&) [20]
[23]     7.6    0.00    1.17      51         nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const [23]
                1.02    0.15     113/113         nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const [24]
                0.00    0.00     116/116         nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const [76]
-----------------------------------------------
                1.02    0.15     113/113         nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const [23]
[24]     7.6    1.02    0.15     113         nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const [24]
                0.08    0.00  394182/394182      nnp::pow_int(double, int) [47]
                0.07    0.00   70491/71990       nnp::CutoffFunction::fdfTANHU(double, double&, double&) const [50]
                0.00    0.00     585/1524        nnp::SymmetryFunction::scale(double) const [124]
-----------------------------------------------
                0.00    0.00    3240/56236896     nnp::Derivatives::operator*(nnp::Derivatives const&) const [87]
                0.01    0.01  828336/56236896     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
                0.23    0.12 18468440/56236896     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
[25]     7.1    0.71    0.38 56236896         nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.19    0.00 56236896/56236896     nnp::Derivatives::computeProdThird(nnp::Derivatives const&, nnp::Derivatives&) const [36]
                0.13    0.00 56236896/56236896     nnp::Derivatives::computeProdSecond(nnp::Derivatives const&, nnp::Derivatives&) const [41]
                0.06    0.00 56236896/56236896     nnp::Derivatives::computeProdFourth(nnp::Derivatives const&, nnp::Derivatives&) const [51]
-----------------------------------------------
                0.12    0.91 9234220/9234220     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [6]
[26]     6.7    0.12    0.91 9234220         nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.08    0.34 9234220/27702660     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.09    0.08 9234220/75530432     nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [14]
                0.08    0.04 9234220/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
                0.09    0.00 18468440/57061992     nnp::CutoffFunction::dnfTANHU(double, int) const [34]
                0.07    0.00 18468440/766232034     nnp::Derivatives::free() [7]
                0.04    0.00 9234220/329861145     nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.00    0.00    3240/47002676     nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.12    0.05 9234220/47002676     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.23    0.09 18468440/47002676     nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [5]
                0.24    0.10 19296776/47002676     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
[27]     5.4    0.59    0.24 47002676         nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
                0.16    0.00 47002676/47002676     nnp::Derivatives::computeSumFourth(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [40]
                0.08    0.00 47002676/47002676     nnp::Derivatives::computeSumThird(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [48]
-----------------------------------------------
                0.01    0.00  828336/47827772     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.11    0.00 9234220/47827772     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.23    0.00 18468440/47827772     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.24    0.00 19296776/47827772     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
[28]     3.8    0.59    0.00 47827772         nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [28]
-----------------------------------------------
                0.01    0.00  828336/38593552     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.08    0.04 9234220/38593552     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.08    0.04 9234220/38593552     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.17    0.08 19296776/38593552     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
[29]     3.3    0.35    0.17 38593552         nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
                0.10    0.00 38593552/38593552     nnp::Derivatives::computed4fu(double const*, nnp::Derivatives const&) [45]
                0.07    0.00 38593552/38593552     nnp::Derivatives::computed3fu(double const*, nnp::Derivatives const&) [49]
-----------------------------------------------
                0.02    0.32   17280/17280       nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[30]     2.2    0.02    0.32   17280         nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
                0.00    0.29  828336/828336      nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.03    0.00   17280/33548       nnp::Derivatives::~Derivatives() [56]
                0.00    0.00   17280/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.00    0.00   17280/766232034     nnp::Derivatives::free() [7]
                0.00    0.00  828336/828336      nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, double) [104]
                0.00    0.00   17280/34563       nnp::Derivatives::reset() [106]
-----------------------------------------------
                0.16    0.01       1/2           nnp::PredictionES::readStructureFromFile(std::string const&) [39]
                0.16    0.01       1/2           nnp::Structure::calculateNeighborList(double) [38]
[31]     2.2    0.31    0.03       2         nnp::Structure::readFromFile(std::string) [31]
                0.02    0.00    5275/5275        void std::vector<nnp::Atom::Neighbor, std::allocator<nnp::Atom::Neighbor> >::_M_emplace_back_aux<nnp::Atom::Neighbor>(nnp::Atom::Neighbor&&) [61]
                0.00    0.01       1/1           nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
                0.00    0.00   58184/58184       nnp::Atom::Neighbor::Neighbor() [105]
                0.00    0.00    4830/4830        void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long const&>(unsigned long const&) [115]
-----------------------------------------------
                0.00    0.00 1656672/114952320     nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.03    0.00 9234220/114952320     nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [15]
                0.03    0.00 9234220/114952320     nnp::Derivatives::computecosijk(double const*, double const*) [12]
                0.03    0.00 9234220/114952320     nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [4]
                0.06    0.00 19296776/114952320     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.08    0.00 27702660/114952320     nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [16]
                0.11    0.00 38593552/114952320     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
[32]     2.2    0.34    0.00 114952320         nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.00    0.29  828336/828336      nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
[33]     1.9    0.00    0.29  828336         nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [33]
                0.01    0.11  828336/19296776     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
                0.01    0.08  828336/19296776     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.02    0.00 1656672/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.01    0.01  828336/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.02    0.00 4141680/766232034     nnp::Derivatives::free() [7]
                0.01    0.00  828336/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
                0.01    0.00  828336/47827772     nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [28]
                0.01    0.00 1656672/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.00    0.00 1656672/114952320     nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [32]
-----------------------------------------------
                0.09    0.00 18468440/57061992     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [26]
                0.19    0.00 38593552/57061992     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
[34]     1.8    0.28    0.00 57061992         nnp::CutoffFunction::dnfTANHU(double, int) const [34]
-----------------------------------------------
                0.11    0.00 19296776/38593552     nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [11]
                0.11    0.00 19296776/38593552     nnp::Derivatives::Derivatives(int, int, double const*, double) [8]
[35]     1.4    0.21    0.00 38593552         nnp::Derivatives::build9VFrom6V(int, nnp::Derivatives&) [35]
-----------------------------------------------
                0.19    0.00 56236896/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
[36]     1.2    0.19    0.00 56236896         nnp::Derivatives::computeProdThird(nnp::Derivatives const&, nnp::Derivatives&) const [36]
-----------------------------------------------
                                                 <spontaneous>
[37]     1.2    0.00    0.19                 nnp::PredictionES::predict() [37]
                0.00    0.17       1/1           nnp::Structure::calculateNeighborList(double) [38]
                0.00    0.02       1/3           nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
                0.00    0.00       1/3           nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool) [199]
                0.00    0.00       1/3           nnp::Mode::calculateCharge(nnp::Structure&) const [201]
-----------------------------------------------
                0.00    0.17       1/1           nnp::PredictionES::predict() [37]
[38]     1.1    0.00    0.17       1         nnp::Structure::calculateNeighborList(double) [38]
                0.16    0.01       1/2           nnp::Structure::readFromFile(std::string) [31]
-----------------------------------------------
                                                 <spontaneous>
[39]     1.1    0.00    0.17                 nnp::PredictionES::readStructureFromFile(std::string const&) [39]
                0.16    0.01       1/2           nnp::Structure::readFromFile(std::string) [31]
                0.00    0.00       1/1           nnp::Structure::reset() [263]
                0.00    0.00       1/1           nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
-----------------------------------------------
                0.16    0.00 47002676/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
[40]     1.0    0.16    0.00 47002676         nnp::Derivatives::computeSumFourth(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [40]
-----------------------------------------------
                0.13    0.00 56236896/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
[41]     0.8    0.13    0.00 56236896         nnp::Derivatives::computeProdSecond(nnp::Derivatives const&, nnp::Derivatives&) const [41]
-----------------------------------------------
                                                 <spontaneous>
[42]     0.8    0.00    0.12                 nnp::PredictionES::getdDipole() [42]
                0.10    0.00       1/1           nnp::Mode::computedDipole(nnp::Structure&) const [44]
                0.00    0.02       1/3           nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
                0.00    0.00       1/3           nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool) [199]
                0.00    0.00       1/3           nnp::Mode::calculateCharge(nnp::Structure&) const [201]
                0.00    0.00       1/2           nnp::Mode::calculateDipole(nnp::Structure&) const [212]
-----------------------------------------------
                0.11    0.00 9234220/9234220     nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
[43]     0.7    0.11    0.00 9234220         nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, int, double) [43]
-----------------------------------------------
                0.10    0.00       1/1           nnp::PredictionES::getdDipole() [42]
[44]     0.7    0.10    0.00       1         nnp::Mode::computedDipole(nnp::Structure&) const [44]
-----------------------------------------------
                0.10    0.00 38593552/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
[45]     0.6    0.10    0.00 38593552         nnp::Derivatives::computed4fu(double const*, nnp::Derivatives const&) [45]
-----------------------------------------------
                                                 <spontaneous>
[46]     0.6    0.09    0.00                 nnp::Derivatives::Derivatives(int) [46]
-----------------------------------------------
                0.08    0.00  394182/394182      nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const [24]
[47]     0.5    0.08    0.00  394182         nnp::pow_int(double, int) [47]
-----------------------------------------------
                0.08    0.00 47002676/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
[48]     0.5    0.08    0.00 47002676         nnp::Derivatives::computeSumThird(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [48]
-----------------------------------------------
                0.07    0.00 38593552/38593552     nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [29]
[49]     0.5    0.07    0.00 38593552         nnp::Derivatives::computed3fu(double const*, nnp::Derivatives const&) [49]
-----------------------------------------------
                0.00    0.00    1499/71990       nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const [76]
                0.07    0.00   70491/71990       nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const [24]
[50]     0.5    0.07    0.00   71990         nnp::CutoffFunction::fdfTANHU(double, double&, double&) const [50]
-----------------------------------------------
                0.06    0.00 56236896/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
[51]     0.4    0.06    0.00 56236896         nnp::Derivatives::computeProdFourth(nnp::Derivatives const&, nnp::Derivatives&) const [51]
-----------------------------------------------
                0.06    0.00   30240/30240       nnp::NeuralNetwork::calculateDnEdGn(double*, double**, double***, double****) const [54]
[52]     0.4    0.06    0.00   30240         nnp::NeuralNetwork::calculatedEdG(double**, int) const [52]
-----------------------------------------------
                0.00    0.06    1080/1080        nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[53]     0.4    0.00    0.06    1080         nnp::Derivatives::compute(nnp::NeuralNetwork const*) [53]
                0.00    0.06    1080/1080        nnp::NeuralNetwork::calculateDnEdGn(double*, double**, double***, double****) const [54]
                0.00    0.00    1080/1080        nnp::NeuralNetwork::getNumNeurons(int) const [127]
                0.00    0.00    1080/4320        nnp::NeuralNetwork::getOutput(double*) const [118]
-----------------------------------------------
                0.00    0.06    1080/1080        nnp::Derivatives::compute(nnp::NeuralNetwork const*) [53]
[54]     0.4    0.00    0.06    1080         nnp::NeuralNetwork::calculateDnEdGn(double*, double**, double***, double****) const [54]
                0.06    0.00   30240/30240       nnp::NeuralNetwork::calculatedEdG(double**, int) const [52]
-----------------------------------------------
                0.00    0.02       1/3           nnp::PredictionES::predict() [37]
                0.00    0.02       1/3           nnp::PredictionES::getdDipole() [42]
                0.00    0.02       1/3           nnp::PredictionES::getHighDerivatives(int, int) [1]
[55]     0.4    0.00    0.06       3         nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
                0.05    0.00    2160/2160        nnp::NeuralNetwork::calculateDEdG(double*) const [58]
                0.00    0.01    3240/4320        nnp::NeuralNetwork::propagate() [66]
                0.00    0.00    3240/4320        nnp::NeuralNetwork::setInput(double const* const&) const [117]
                0.00    0.00    3240/4320        nnp::NeuralNetwork::getOutput(double*) const [118]
-----------------------------------------------
                0.01    0.00    3308/33548       nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.02    0.00   12960/33548       nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.03    0.00   17280/33548       nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
[56]     0.4    0.06    0.00   33548         nnp::Derivatives::~Derivatives() [56]
-----------------------------------------------
                0.05    0.00 9234220/9234220     nnp::Derivatives::computecosijk(double const*, double const*) [12]
[57]     0.3    0.05    0.00 9234220         nnp::Derivatives::computednRijk(double const*, double const*) [57]
-----------------------------------------------
                0.05    0.00    2160/2160        nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
[58]     0.3    0.05    0.00    2160         nnp::NeuralNetwork::calculateDEdG(double*) const [58]
-----------------------------------------------
                                                 <spontaneous>
[59]     0.2    0.03    0.00                 nnp::Derivatives::computed4Rij2_6() [59]
-----------------------------------------------
                                                 <spontaneous>
[60]     0.2    0.03    0.00                 nnp::Derivatives::Derivatives(nnp::Derivatives const&) [60]
-----------------------------------------------
                0.02    0.00    5275/5275        nnp::Structure::readFromFile(std::string) [31]
[61]     0.1    0.02    0.00    5275         void std::vector<nnp::Atom::Neighbor, std::allocator<nnp::Atom::Neighbor> >::_M_emplace_back_aux<nnp::Atom::Neighbor>(nnp::Atom::Neighbor&&) [61]
-----------------------------------------------
                0.00    0.01       1/1           nnp::PredictionES::setup() [17]
[62]     0.1    0.00    0.01       1         nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
                0.01    0.00    2827/5238        nnp::split(std::string const&, char) [65]
                0.01    0.00    2827/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      24/175         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [134]
                0.00    0.00       7/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       5/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/2           nnp::NeuralNetwork::setConnections(double const* const&) [202]
-----------------------------------------------
                0.01    0.00   12960/12960       nnp::NeuralNetwork::propagate() [66]
[63]     0.1    0.01    0.00   12960         nnp::NeuralNetwork::propagateLayer(nnp::NeuralNetwork::Layer&, nnp::NeuralNetwork::Layer&) [63]
-----------------------------------------------
                0.00    0.00       1/5346        nnp::ElementMap::registerElements(std::string const&) [90]
                0.00    0.00       2/5346        nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       2/5346        nnp::Mode::setupElements() [88]
                0.00    0.00      25/5346        nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      32/5346        nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      57/5346        nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
                0.00    0.00      57/5346        nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00      57/5346        nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double) [79]
                0.00    0.00     109/5346        nnp::Settings::parseLines() [83]
                0.00    0.00    1088/5346        nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
                0.00    0.00    1089/5346        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
                0.01    0.00    2827/5346        nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
[64]     0.1    0.01    0.00    5346         nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
-----------------------------------------------
                0.00    0.00       1/5238        nnp::ElementMap::registerElements(std::string const&) [90]
                0.00    0.00       1/5238        nnp::Mode::setupCutoff() [92]
                0.00    0.00       2/5238        nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       2/5238        nnp::Mode::setupElements() [88]
                0.00    0.00      25/5238        nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      32/5238        nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      57/5238        nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
                0.00    0.00      57/5238        nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00      57/5238        nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double) [79]
                0.00    0.00    1088/5238        nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
                0.00    0.00    1089/5238        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
                0.01    0.00    2827/5238        nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
[65]     0.1    0.01    0.00    5238         nnp::split(std::string const&, char) [65]
                0.00    0.00   23071/23107       void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&) [109]
-----------------------------------------------
                0.00    0.00    1080/4320        nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.01    3240/4320        nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
[66]     0.1    0.00    0.01    4320         nnp::NeuralNetwork::propagate() [66]
                0.01    0.00   12960/12960       nnp::NeuralNetwork::propagateLayer(nnp::NeuralNetwork::Layer&, nnp::NeuralNetwork::Layer&) [63]
-----------------------------------------------
                0.01    0.00      42/42          void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&) [20]
[67]     0.1    0.01    0.00      42         nnp::Atom::getNumNeighbors(double) const [67]
-----------------------------------------------
                                                 <spontaneous>
[68]     0.1    0.01    0.00                 nnp::appendLinesToFile(_IO_FILE* const&, std::vector<std::string, std::allocator<std::string> >) [68]
-----------------------------------------------
                                                 <spontaneous>
[69]     0.1    0.01    0.00                 nnp::Derivatives::computeSumSecond(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [69]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.1    0.01    0.00                 nnp::CutoffFunction::fdfTANH(double, double&, double&) const [70]
-----------------------------------------------
                0.00    0.01       1/1           nnp::Structure::readFromFile(std::string) [31]
[71]     0.1    0.00    0.01       1         nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
                0.00    0.00       1/1           nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
                0.00    0.00    1088/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00    1088/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      12/23107       void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&) [109]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.0    0.01    0.00                 getListPermutation(int*, int, int&) [clone .constprop.13] [72]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.0    0.01    0.00                 nnp::Derivatives::computecosijk(double, double, double const*, double const*) [73]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.0    0.01    0.00                 nnp::Derivatives::Derivatives(int, double, double const*, double, nnp::CutoffFunction const&) [74]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
[75]     0.0    0.00    0.00       1         nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
                0.00    0.00    1089/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00    1089/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00    2160/2358        nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00    1080/1080        nnp::Structure::remap(nnp::Atom&) [126]
                0.00    0.00    1080/1080        nnp::Atom::Atom() [125]
                0.00    0.00    1080/1080        void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::emplace_back<nnp::Atom>(nnp::Atom&&) [128]
                0.00    0.00      12/12          void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::_M_emplace_back_aux<nnp::Atom>(nnp::Atom&&) [169]
                0.00    0.00       1/1           nnp::Structure::calculateInverseBox() [262]
-----------------------------------------------
                0.00    0.00     116/116         nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const [23]
[76]     0.0    0.00    0.00     116         nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const [76]
                0.00    0.00    1499/71990       nnp::CutoffFunction::fdfTANHU(double, double&, double&) const [50]
                0.00    0.00     939/1524        nnp::SymmetryFunction::scale(double) const [124]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[77]     0.0    0.00    0.00       1         nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00      57/57          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
                0.00    0.00      57/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00      57/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      57/2358        nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00      33/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       5/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/2           nnp::Element::sortSymmetryFunctions() [208]
                0.00    0.00       2/2           nnp::Element::getMaxCutoffRadius() const [214]
                0.00    0.00       2/2           nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [207]
                0.00    0.00       2/2           nnp::Element::infoSymmetryFunctionParameters() const [217]
                0.00    0.00       2/7           nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
                0.00    0.00       2/2           nnp::Element::getMinNeighbors() const [213]
                0.00    0.00       2/2           nnp::Element::getMinCutoffRadius() const [215]
                0.00    0.00       1/2           nnp::Settings::getValues(std::string const&) const [218]
                0.00    0.00       1/139         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [135]
                0.00    0.00       1/2           std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [221]
-----------------------------------------------
                0.00    0.00      57/57          nnp::Mode::setupSymmetryFunctions() [77]
[78]     0.0    0.00    0.00      57         nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
                0.00    0.00      32/32          nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      57/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00      57/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      25/25          nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      32/32          nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&) [158]
                0.00    0.00      25/25          nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&) [162]
                0.00    0.00      12/12          void std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> >::_M_emplace_back_aux<nnp::SymmetryFunction*>(nnp::SymmetryFunction*&&) [170]
-----------------------------------------------
                0.00    0.00      57/57          nnp::Element::setScalingNone() const [80]
[79]     0.0    0.00    0.00      57         nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double) [79]
                0.00    0.00      57/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00      57/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctionScalingNone() [81]
[80]     0.0    0.00    0.00       2         nnp::Element::setScalingNone() const [80]
                0.00    0.00      57/57          nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double) [79]
                0.00    0.00      57/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::setScalingFactors() [182]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::setScalingFactors() [192]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::setup() [17]
[81]     0.0    0.00    0.00       1         nnp::Mode::setupSymmetryFunctionScalingNone() [81]
                0.00    0.00       2/2           nnp::Element::setScalingNone() const [80]
                0.00    0.00       5/9868        nnp::Log::operator<<(std::string const&) [114]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::setup() [17]
[82]     0.0    0.00    0.00       1         nnp::Mode::loadSettingsFile(std::string const&) [82]
                0.00    0.00       1/1           nnp::Settings::parseLines() [83]
                0.00    0.00       4/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       1/1           nnp::Settings::loadFile(std::string const&) [259]
                0.00    0.00       1/1           nnp::Settings::info() const [266]
                0.00    0.00       1/7           nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::loadSettingsFile(std::string const&) [82]
[83]     0.0    0.00    0.00       1         nnp::Settings::parseLines() [83]
                0.00    0.00     109/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00     109/109         std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, unsigned long> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_insert_equal<std::pair<std::string, std::pair<std::string, unsigned long> > >(std::pair<std::string, std::pair<std::string, unsigned long> >&&) [137]
                0.00    0.00       1/1           nnp::Settings::sanityCheck() [258]
                0.00    0.00       1/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       1/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
-----------------------------------------------
                0.00    0.00    3240/3240        nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[84]     0.0    0.00    0.00    3240         nnp::Derivatives::operator+=(nnp::Derivatives const&) [84]
                0.00    0.00    3240/47002676     nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [27]
                0.00    0.00    3240/217390590     nnp::Derivatives::operator=(nnp::Derivatives const&) [9]
                0.00    0.00    3240/329861145     nnp::Derivatives::Derivatives(int, int) [13]
                0.00    0.00    3240/766232034     nnp::Derivatives::free() [7]
-----------------------------------------------
                0.00    0.00      32/32          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
[85]     0.0    0.00    0.00      32         nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      32/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00      32/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      64/2358        nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00      32/66          nnp::CutoffFunction::setCutoffRadius(double) [147]
                0.00    0.00      32/123         nnp::CutoffFunction::setCutoffParameter(double) [136]
-----------------------------------------------
                0.00    0.00      25/25          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
[86]     0.0    0.00    0.00      25         nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      25/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00      25/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      75/2358        nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00      25/66          nnp::CutoffFunction::setCutoffRadius(double) [147]
                0.00    0.00      25/123         nnp::CutoffFunction::setCutoffParameter(double) [136]
-----------------------------------------------
                0.00    0.00    3240/3240        nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[87]     0.0    0.00    0.00    3240         nnp::Derivatives::operator*(nnp::Derivatives const&) const [87]
                0.00    0.00    3240/56236896     nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [25]
                0.00    0.00    3240/329861145     nnp::Derivatives::Derivatives(int, int) [13]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[88]     0.0    0.00    0.00       1         nnp::Mode::setupElements() [88]
                0.00    0.00       2/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00       2/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00       9/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       3/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/2           nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       2/5           nnp::Element::~Element() [185]
                0.00    0.00       2/2358        nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00       2/2           void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
                0.00    0.00       1/6           nnp::Settings::operator[](std::string const&) const [180]
                0.00    0.00       1/7           nnp::Settings::keywordExists(std::string const&) const [178]
                0.00    0.00       1/2           nnp::Settings::getValues(std::string const&) const [218]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::setup() [17]
[89]     0.0    0.00    0.00       1         nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       2/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00       2/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00      10/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       3/6           nnp::Settings::operator[](std::string const&) const [180]
                0.00    0.00       3/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/2           nnp::NeuralNetwork::NeuralNetwork(int, int const* const&, nnp::NeuralNetwork::ActivationFunction const* const&) [204]
                0.00    0.00       2/2           nnp::NeuralNetwork::setNormalizeNeurons(bool) [203]
                0.00    0.00       2/2           nnp::NeuralNetwork::info() const [211]
                0.00    0.00       2/7           nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
                0.00    0.00       2/2           std::vector<std::string, std::allocator<std::string> >::~vector() [220]
                0.00    0.00       1/7           nnp::Settings::keywordExists(std::string const&) const [178]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupElementMap() [91]
[90]     0.0    0.00    0.00       1         nnp::ElementMap::registerElements(std::string const&) [90]
                0.00    0.00       1/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00       1/5346        nnp::reduce(std::string const&, std::string const&, std::string const&) [64]
                0.00    0.00       2/2           std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, std::string> >, unsigned long const&) [224]
                0.00    0.00       2/2           std::_Rb_tree_iterator<std::pair<std::string const, unsigned long> > std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<std::string const&>&&, std::tuple<>&&) [223]
                0.00    0.00       1/1           void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)) [clone .constprop.81] [271]
                0.00    0.00       1/1           void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)) [clone .constprop.93] [270]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[91]     0.0    0.00    0.00       1         nnp::Mode::setupElementMap() [91]
                0.00    0.00       1/1           nnp::ElementMap::registerElements(std::string const&) [90]
                0.00    0.00       7/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       4/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00       3/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/8           nnp::ElementMap::atomicNumber(std::string const&) [175]
                0.00    0.00       1/6           nnp::Settings::operator[](std::string const&) const [180]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[92]     0.0    0.00    0.00       1         nnp::Mode::setupCutoff() [92]
                0.00    0.00       1/5238        nnp::split(std::string const&, char) [65]
                0.00    0.00       9/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       2/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       1/6           nnp::Settings::operator[](std::string const&) const [180]
-----------------------------------------------
                0.00    0.00  828336/828336      nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
[104]    0.0    0.00    0.00  828336         nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, double) [104]
-----------------------------------------------
                0.00    0.00   58184/58184       nnp::Structure::readFromFile(std::string) [31]
[105]    0.0    0.00    0.00   58184         nnp::Atom::Neighbor::Neighbor() [105]
-----------------------------------------------
                0.00    0.00    4323/34563       nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.00   12960/34563       nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [3]
                0.00    0.00   17280/34563       nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const [30]
[106]    0.0    0.00    0.00   34563         nnp::Derivatives::reset() [106]
-----------------------------------------------
                0.00    0.00   30240/30240       nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[107]    0.0    0.00    0.00   30240         nnp::Derivatives::addTodF(nnp::Derivatives const&, nnp::Derivatives const*, int*, int) [107]
                0.00    0.00   30240/30240       nnp::Derivatives::addTod1F(nnp::Derivatives const&, nnp::Derivatives const*, int*) [108]
-----------------------------------------------
                0.00    0.00   30240/30240       nnp::Derivatives::addTodF(nnp::Derivatives const&, nnp::Derivatives const*, int*, int) [107]
[108]    0.0    0.00    0.00   30240         nnp::Derivatives::addTod1F(nnp::Derivatives const&, nnp::Derivatives const*, int*) [108]
-----------------------------------------------
                0.00    0.00       9/23107       nnp::Settings::readFile() [260]
                0.00    0.00      12/23107       nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [71]
                0.00    0.00      15/23107       nnp::Log::addLogEntry(std::string const&) [111]
                0.00    0.00   23071/23107       nnp::split(std::string const&, char) [65]
[109]    0.0    0.00    0.00   23107         void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&) [109]
-----------------------------------------------
                0.00    0.00       1/10167       nnp::Mode::initialize() [254]
                0.00    0.00       1/10167       nnp::Settings::parseLines() [83]
                0.00    0.00       2/10167       nnp::Mode::setupCutoff() [92]
                0.00    0.00       2/10167       nnp::Mode::setupSymmetryFunctionGroups() [22]
                0.00    0.00       2/10167       nnp::Settings::readFile() [260]
                0.00    0.00       3/10167       nnp::Mode::setupElementMap() [91]
                0.00    0.00       3/10167       nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       3/10167       nnp::Mode::setupElements() [88]
                0.00    0.00       4/10167       nnp::Mode::setupSymmetryFunctionStatistics(bool, bool, bool, bool) [481]
                0.00    0.00       5/10167       nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00       5/10167       nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
                0.00    0.00      25/10167       nnp::SymmetryFunctionAngularNarrow::parameterLine() const [164]
                0.00    0.00      30/10167       nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00      32/10167       nnp::SymmetryFunctionRadial::parameterLine() const [160]
                0.00    0.00      36/10167       nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
                0.00    0.00      57/10167       nnp::Element::setScalingNone() const [80]
                0.00    0.00     232/10167       nnp::NeuralNetwork::info() const [211]
                0.00    0.00    9724/10167       compareAnalytic1Analytic2(nnp::PredictionES&, double**, nnp::Derivatives*) [273]
[110]    0.0    0.00    0.00   10167         nnp::strpr(char const*, ...) [110]
-----------------------------------------------
                0.00    0.00     260/10148       nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
                0.00    0.00    9888/10148       nnp::Log::operator<<(std::string const&) [114]
[111]    0.0    0.00    0.00   10148         nnp::Log::addLogEntry(std::string const&) [111]
                0.00    0.00      15/23107       void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&) [109]
-----------------------------------------------
                0.00    0.00    9890/9890        nnp::ElementMap::symbol(unsigned long) const [113]
[112]    0.0    0.00    0.00    9890         std::string const& nnp::safeFind<unsigned long, std::string>(std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > > const&, std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::key_type const&) [112]
-----------------------------------------------
                0.00    0.00       4/9890        nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       4/9890        nnp::Mode::setupElementMap() [91]
                0.00    0.00       8/9890        nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
                0.00    0.00      15/9890        nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00      64/9890        nnp::SymmetryFunctionRadial::parameterLine() const [160]
                0.00    0.00      75/9890        nnp::SymmetryFunctionAngularNarrow::parameterLine() const [164]
                0.00    0.00    9720/9890        compareAnalytic1Analytic2(nnp::PredictionES&, double**, nnp::Derivatives*) [273]
[113]    0.0    0.00    0.00    9890         nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00    9890/9890        std::string const& nnp::safeFind<unsigned long, std::string>(std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > > const&, std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::key_type const&) [112]
-----------------------------------------------
                0.00    0.00       4/9868        nnp::Mode::loadSettingsFile(std::string const&) [82]
                0.00    0.00       5/9868        nnp::Mode::setupNormalization() [256]
                0.00    0.00       5/9868        nnp::Mode::setupSymmetryFunctionScalingNone() [81]
                0.00    0.00       7/9868        nnp::Mode::setupElementMap() [91]
                0.00    0.00       7/9868        nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
                0.00    0.00       9/9868        nnp::Mode::setupSymmetryFunctionStatistics(bool, bool, bool, bool) [481]
                0.00    0.00       9/9868        nnp::Mode::setupCutoff() [92]
                0.00    0.00       9/9868        nnp::Mode::setupElements() [88]
                0.00    0.00      10/9868        nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00      12/9868        nnp::Mode::initialize() [254]
                0.00    0.00      33/9868        nnp::Mode::setupSymmetryFunctionGroups() [22]
                0.00    0.00      33/9868        nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00    9725/9868        compareAnalytic1Analytic2(nnp::PredictionES&, double**, nnp::Derivatives*) [273]
[114]    0.0    0.00    0.00    9868         nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00    9888/10148       nnp::Log::addLogEntry(std::string const&) [111]
-----------------------------------------------
                0.00    0.00    4830/4830        nnp::Structure::readFromFile(std::string) [31]
[115]    0.0    0.00    0.00    4830         void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long const&>(unsigned long const&) [115]
-----------------------------------------------
                0.00    0.00    4716/4716        unsigned long const& nnp::safeFind<std::string, unsigned long>(std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > > const&, std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::key_type const&) [121]
[116]    0.0    0.00    0.00    4716         std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::find(std::string const&) const [116]
-----------------------------------------------
                0.00    0.00    1080/4320        nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
                0.00    0.00    3240/4320        nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
[117]    0.0    0.00    0.00    4320         nnp::NeuralNetwork::setInput(double const* const&) const [117]
-----------------------------------------------
                0.00    0.00    1080/4320        nnp::Derivatives::compute(nnp::NeuralNetwork const*) [53]
                0.00    0.00    3240/4320        nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const [55]
[118]    0.0    0.00    0.00    4320         nnp::NeuralNetwork::getOutput(double*) const [118]
-----------------------------------------------
                0.00    0.00    4270/4270        nnp::Atom::allocate(bool) [155]
[119]    0.0    0.00    0.00    4270         std::vector<nnp::Vec3D, std::allocator<nnp::Vec3D> >::_M_default_append(unsigned long) [119]
-----------------------------------------------
                0.00    0.00     136/3594        nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
                0.00    0.00     720/3594        nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
                0.00    0.00    1256/3594        std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107] [131]
                0.00    0.00    1482/3594        std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.103] [130]
[120]    0.0    0.00    0.00    3594         std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const [120]
-----------------------------------------------
                0.00    0.00    2358/2358        nnp::ElementMap::index(std::string const&) const [122]
[121]    0.0    0.00    0.00    2358         unsigned long const& nnp::safeFind<std::string, unsigned long>(std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > > const&, std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::key_type const&) [121]
                0.00    0.00    4716/4716        std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::find(std::string const&) const [116]
-----------------------------------------------
                0.00    0.00       2/2358        nnp::Mode::setupElements() [88]
                0.00    0.00      57/2358        nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00      64/2358        nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      75/2358        nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00    2160/2358        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[122]    0.0    0.00    0.00    2358         nnp::ElementMap::index(std::string const&) const [122]
                0.00    0.00    2358/2358        unsigned long const& nnp::safeFind<std::string, unsigned long>(std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > > const&, std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::key_type const&) [121]
-----------------------------------------------
                0.00    0.00     220/1684        nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
                0.00    0.00    1464/1684        nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
[123]    0.0    0.00    0.00    1684         std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const [123]
-----------------------------------------------
                0.00    0.00     585/1524        nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const [24]
                0.00    0.00     939/1524        nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const [76]
[124]    0.0    0.00    0.00    1524         nnp::SymmetryFunction::scale(double) const [124]
-----------------------------------------------
                0.00    0.00    1080/1080        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[125]    0.0    0.00    0.00    1080         nnp::Atom::Atom() [125]
-----------------------------------------------
                0.00    0.00    1080/1080        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[126]    0.0    0.00    0.00    1080         nnp::Structure::remap(nnp::Atom&) [126]
-----------------------------------------------
                0.00    0.00    1080/1080        nnp::Derivatives::compute(nnp::NeuralNetwork const*) [53]
[127]    0.0    0.00    0.00    1080         nnp::NeuralNetwork::getNumNeurons(int) const [127]
-----------------------------------------------
                0.00    0.00    1080/1080        nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[128]    0.0    0.00    0.00    1080         void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::emplace_back<nnp::Atom>(nnp::Atom&&) [128]
-----------------------------------------------
                0.00    0.00      20/773         nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&) [193]
                0.00    0.00      45/773         nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&) [183]
                0.00    0.00      63/773         nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
                0.00    0.00      96/773         nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&) [158]
                0.00    0.00     150/773         nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&) [162]
                0.00    0.00     399/773         nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
[129]    0.0    0.00    0.00     773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
-----------------------------------------------
                0.00    0.00     741/741         nnp::SymmetryFunction::getPrintFormat() const [153]
[130]    0.0    0.00    0.00     741         std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.103] [130]
                0.00    0.00    1482/3594        std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const [120]
-----------------------------------------------
                0.00    0.00      76/628         nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
                0.00    0.00     552/628         nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
[131]    0.0    0.00    0.00     628         std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107] [131]
                0.00    0.00    1256/3594        std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const [120]
-----------------------------------------------
                0.00    0.00      56/238         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.151] [197]
                0.00    0.00      62/238         void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
                0.00    0.00     120/238         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.168] [225]
[132]    0.0    0.00    0.00     238         nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const [132]
-----------------------------------------------
                0.00    0.00       1/181         void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
                0.00    0.00      40/181         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.197] [189]
                0.00    0.00     140/181         nnp::Element::sortSymmetryFunctions() [208]
[133]    0.0    0.00    0.00     181         nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const [133]
-----------------------------------------------
                0.00    0.00      24/175         nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
                0.00    0.00      32/175         nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
                0.00    0.00     119/175         nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[134]    0.0    0.00    0.00     175         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [134]
-----------------------------------------------
                0.00    0.00       1/139         nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00       4/139         nnp::SymmetryFunctionGroupRadial::setScalingFactors() [192]
                0.00    0.00       5/139         nnp::SymmetryFunctionGroupAngularNarrow::setScalingFactors() [182]
                0.00    0.00     129/139         nnp::Atom::allocate(bool) [155]
[135]    0.0    0.00    0.00     139         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [135]
-----------------------------------------------
                0.00    0.00       4/123         nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
                0.00    0.00       5/123         nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
                0.00    0.00      25/123         nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      32/123         nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
                0.00    0.00      57/123         nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [207]
[136]    0.0    0.00    0.00     123         nnp::CutoffFunction::setCutoffParameter(double) [136]
-----------------------------------------------
                0.00    0.00     109/109         nnp::Settings::parseLines() [83]
[137]    0.0    0.00    0.00     109         std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, unsigned long> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_insert_equal<std::pair<std::string, std::pair<std::string, unsigned long> > >(std::pair<std::string, std::pair<std::string, unsigned long> >&&) [137]
-----------------------------------------------
                0.00    0.00      98/98          nnp::Element::setupSymmetryFunctionGroups() [21]
[138]    0.0    0.00    0.00      98         nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
                0.00    0.00      16/16          void std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionRadial const* const&>(nnp::SymmetryFunctionRadial const* const&) [167]
                0.00    0.00       4/66          nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType) [146]
                0.00    0.00       4/66          nnp::CutoffFunction::setCutoffRadius(double) [147]
                0.00    0.00       4/123         nnp::CutoffFunction::setCutoffParameter(double) [136]
-----------------------------------------------
                0.00    0.00       1/80          nnp::Settings::parseLines() [83]
                0.00    0.00       2/80          nnp::Settings::readFile() [260]
                0.00    0.00       5/80          nnp::SymmetryFunctionGroup::initializePrintOrder() [399]
                0.00    0.00       5/80          nnp::SymmetryFunction::initializePrintOrder() [378]
                0.00    0.00      12/80          nnp::Element::infoSymmetryFunctionParameters() const [217]
                0.00    0.00      15/80          nnp::NeuralNetwork::info() const [211]
                0.00    0.00      20/80          nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00      20/80          nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
[139]    0.0    0.00    0.00      80         void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
-----------------------------------------------
                0.00    0.00       8/75          nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [194]
                0.00    0.00      10/75          nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [184]
                0.00    0.00      25/75          nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [163]
                0.00    0.00      32/75          nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [159]
[140]    0.0    0.00    0.00      75         std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [140]
-----------------------------------------------
                0.00    0.00       1/74          nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
                0.00    0.00       2/74          nnp::PredictionES::~PredictionES() [365]
                0.00    0.00       4/74          nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [194]
                0.00    0.00       5/74          nnp::Element::~Element() [185]
                0.00    0.00       5/74          nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [184]
                0.00    0.00      25/74          nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [163]
                0.00    0.00      32/74          nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [159]
[141]    0.0    0.00    0.00      74         std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
-----------------------------------------------
                0.00    0.00       1/74          nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
                0.00    0.00       2/74          nnp::PredictionES::~PredictionES() [365]
                0.00    0.00       4/74          nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [194]
                0.00    0.00       5/74          nnp::Element::~Element() [185]
                0.00    0.00       5/74          nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [184]
                0.00    0.00      25/74          nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [163]
                0.00    0.00      32/74          nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [159]
[142]    0.0    0.00    0.00      74         std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
-----------------------------------------------
                                  72             std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       1/72          void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
                0.00    0.00       1/72          nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
                0.00    0.00       2/72          nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       2/72          nnp::Element::Element(nnp::Element const&) [209]
                0.00    0.00       9/72          nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
                0.00    0.00      57/72          nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
[143]    0.0    0.00    0.00      72+72      std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                                  72             std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
-----------------------------------------------
                                  72             std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00       1/72          void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
                0.00    0.00       1/72          nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
                0.00    0.00       2/72          nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       2/72          nnp::Element::Element(nnp::Element const&) [209]
                0.00    0.00       9/72          nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
                0.00    0.00      57/72          nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
[144]    0.0    0.00    0.00      72+72      std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                                  72             std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
-----------------------------------------------
                0.00    0.00       2/67          nnp::Settings::getValues(std::string const&) const [218]
                0.00    0.00      65/67          nnp::Settings::sanityCheck() [258]
[145]    0.0    0.00    0.00      67         std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::equal_range(std::string const&) const [145]
-----------------------------------------------
                0.00    0.00       4/66          nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
                0.00    0.00       5/66          nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
                0.00    0.00      57/66          nnp::SymmetryFunction::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [151]
[146]    0.0    0.00    0.00      66         nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType) [146]
-----------------------------------------------
                0.00    0.00       4/66          nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
                0.00    0.00       5/66          nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [19]
                0.00    0.00      25/66          nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [86]
                0.00    0.00      32/66          nnp::SymmetryFunctionRadial::setParameters(std::string const&) [85]
[147]    0.0    0.00    0.00      66         nnp::CutoffFunction::setCutoffRadius(double) [147]
-----------------------------------------------
                0.00    0.00       9/66          nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
                0.00    0.00      57/66          nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
[148]    0.0    0.00    0.00      66         nnp::CutoffFunction::CutoffFunction() [148]
-----------------------------------------------
                0.00    0.00       4/65          createKnownKeywordsMap() [272]
                0.00    0.00      61/65          std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::operator[](std::string&&) [150]
[149]    0.0    0.00    0.00      65         std::_Rb_tree_iterator<std::pair<std::string const, std::string> > std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string> >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&) [149]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_get_insert_unique_pos(std::string const&) [268]
-----------------------------------------------
                0.00    0.00      61/61          createKnownKeywordsMap() [272]
[150]    0.0    0.00    0.00      61         std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::operator[](std::string&&) [150]
                0.00    0.00      61/65          std::_Rb_tree_iterator<std::pair<std::string const, std::string> > std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string> >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&) [149]
-----------------------------------------------
                0.00    0.00      57/57          nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [207]
[151]    0.0    0.00    0.00      57         nnp::SymmetryFunction::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [151]
                0.00    0.00      57/66          nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType) [146]
-----------------------------------------------
                0.00    0.00      25/57          nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&) [162]
                0.00    0.00      32/57          nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&) [158]
[152]    0.0    0.00    0.00      57         nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
                0.00    0.00     399/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00      57/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00      57/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00      57/66          nnp::CutoffFunction::CutoffFunction() [148]
-----------------------------------------------
                0.00    0.00      25/57          nnp::SymmetryFunctionAngularNarrow::parameterLine() const [164]
                0.00    0.00      32/57          nnp::SymmetryFunctionRadial::parameterLine() const [160]
[153]    0.0    0.00    0.00      57         nnp::SymmetryFunction::getPrintFormat() const [153]
                0.00    0.00     741/741         std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.103] [130]
-----------------------------------------------
                0.00    0.00      25/57          nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00      32/57          nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
[154]    0.0    0.00    0.00      57         nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
                0.00    0.00    1464/1684        std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const [123]
                0.00    0.00     720/3594        std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const [120]
                0.00    0.00     552/628         std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107] [131]
-----------------------------------------------
                0.00    0.00      56/56          void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&) [20]
[155]    0.0    0.00    0.00      56         nnp::Atom::allocate(bool) [155]
                0.00    0.00    4270/4270        std::vector<nnp::Vec3D, std::allocator<nnp::Vec3D> >::_M_default_append(unsigned long) [119]
                0.00    0.00     129/139         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [135]
-----------------------------------------------
                0.00    0.00      34/34          nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const [2]
[156]    0.0    0.00    0.00      34         nnp::Derivatives::Derivatives() [156]
-----------------------------------------------
                0.00    0.00      16/33          nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
                0.00    0.00      17/33          nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[157]    0.0    0.00    0.00      33         void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&) [157]
-----------------------------------------------
                0.00    0.00      32/32          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
[158]    0.0    0.00    0.00      32         nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&) [158]
                0.00    0.00      96/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00      32/57          nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
-----------------------------------------------
                0.00    0.00      32/32          nnp::Element::~Element() [185]
[159]    0.0    0.00    0.00      32         nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [159]
                0.00    0.00      32/75          std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [140]
                0.00    0.00      32/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00      32/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
-----------------------------------------------
                0.00    0.00      32/32          nnp::Element::infoSymmetryFunctionParameters() const [217]
[160]    0.0    0.00    0.00      32         nnp::SymmetryFunctionRadial::parameterLine() const [160]
                0.00    0.00      64/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00      32/57          nnp::SymmetryFunction::getPrintFormat() const [153]
                0.00    0.00      32/10167       nnp::strpr(char const*, ...) [110]
-----------------------------------------------
                0.00    0.00      13/29          nnp::SymmetryFunction::initializePrintFormat() [379]
                0.00    0.00      16/29          nnp::SymmetryFunctionGroup::initializePrintFormat() [400]
[161]    0.0    0.00    0.00      29         std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, std::string> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<std::string, std::string> > >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&) [161]
                0.00    0.00       2/2           std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_get_insert_unique_pos(std::string const&) [222]
-----------------------------------------------
                0.00    0.00      25/25          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
[162]    0.0    0.00    0.00      25         nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&) [162]
                0.00    0.00     150/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00      25/57          nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [152]
-----------------------------------------------
                0.00    0.00      25/25          nnp::Element::~Element() [185]
[163]    0.0    0.00    0.00      25         nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [163]
                0.00    0.00      25/75          std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [140]
                0.00    0.00      25/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00      25/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
-----------------------------------------------
                0.00    0.00      25/25          nnp::Element::infoSymmetryFunctionParameters() const [217]
[164]    0.0    0.00    0.00      25         nnp::SymmetryFunctionAngularNarrow::parameterLine() const [164]
                0.00    0.00      75/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00      25/57          nnp::SymmetryFunction::getPrintFormat() const [153]
                0.00    0.00      25/10167       nnp::strpr(char const*, ...) [110]
-----------------------------------------------
                0.00    0.00       2/21          nnp::Settings::getValues(std::string const&) const [218]
                0.00    0.00       7/21          nnp::Settings::keywordExists(std::string const&) const [178]
                0.00    0.00      12/21          nnp::Settings::operator[](std::string const&) const [180]
[165]    0.0    0.00    0.00      21         std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const [165]
-----------------------------------------------
                0.00    0.00      17/17          nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[166]    0.0    0.00    0.00      17         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [166]
-----------------------------------------------
                0.00    0.00      16/16          nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [138]
[167]    0.0    0.00    0.00      16         void std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionRadial const* const&>(nnp::SymmetryFunctionRadial const* const&) [167]
-----------------------------------------------
                0.00    0.00      13/13          void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153] [226]
[168]    0.0    0.00    0.00      13         nnp::SymmetryFunctionGroupAngularNarrow::operator<(nnp::SymmetryFunctionGroup const&) const [168]
-----------------------------------------------
                0.00    0.00      12/12          nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[169]    0.0    0.00    0.00      12         void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::_M_emplace_back_aux<nnp::Atom>(nnp::Atom&&) [169]
-----------------------------------------------
                0.00    0.00      12/12          nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [78]
[170]    0.0    0.00    0.00      12         void std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> >::_M_emplace_back_aux<nnp::SymmetryFunction*>(nnp::SymmetryFunction*&&) [170]
-----------------------------------------------
                0.00    0.00      10/10          nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[171]    0.0    0.00    0.00      10         std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool) [171]
-----------------------------------------------
                0.00    0.00       4/9           nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&) [193]
                0.00    0.00       5/9           nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&) [183]
[172]    0.0    0.00    0.00       9         nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
                0.00    0.00      63/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00       9/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       9/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00       9/66          nnp::CutoffFunction::CutoffFunction() [148]
-----------------------------------------------
                0.00    0.00       4/9           nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
                0.00    0.00       5/9           nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
[173]    0.0    0.00    0.00       9         nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
                0.00    0.00     220/1684        std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const [123]
                0.00    0.00     136/3594        std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const [120]
                0.00    0.00      76/628         std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107] [131]
-----------------------------------------------
                0.00    0.00       9/9           nnp::Element::infoSymmetryFunctionGroups() const [216]
[174]    0.0    0.00    0.00       9         void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag) [174]
-----------------------------------------------
                0.00    0.00       2/8           nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       2/8           nnp::Mode::setupElementMap() [91]
                0.00    0.00       4/8           void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)) [clone .constprop.93] [270]
[175]    0.0    0.00    0.00       8         nnp::ElementMap::atomicNumber(std::string const&) [175]
-----------------------------------------------
                0.00    0.00       8/8           nnp::NeuralNetwork::NeuralNetwork(int, int const* const&, nnp::NeuralNetwork::ActivationFunction const* const&) [204]
[176]    0.0    0.00    0.00       8         nnp::NeuralNetwork::allocateLayer(nnp::NeuralNetwork::Layer&, int, int, nnp::NeuralNetwork::ActivationFunction) [176]
-----------------------------------------------
                0.00    0.00       1/7           nnp::Mode::loadSettingsFile(std::string const&) [82]
                0.00    0.00       2/7           nnp::Mode::setupSymmetryFunctionGroups() [22]
                0.00    0.00       2/7           nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       2/7           nnp::Mode::setupSymmetryFunctions() [77]
[177]    0.0    0.00    0.00       7         nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [177]
                0.00    0.00     260/10148       nnp::Log::addLogEntry(std::string const&) [111]
-----------------------------------------------
                0.00    0.00       1/7           nnp::Mode::setupDFTD3() [255]
                0.00    0.00       1/7           nnp::Mode::setupNeuralNetwork() [89]
                0.00    0.00       1/7           nnp::Mode::setupElements() [88]
                0.00    0.00       4/7           nnp::Mode::setupNormalization() [256]
[178]    0.0    0.00    0.00       7         nnp::Settings::keywordExists(std::string const&) const [178]
                0.00    0.00       7/21          std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const [165]
-----------------------------------------------
                0.00    0.00       7/7           nnp::Element::setupSymmetryFunctionGroups() [21]
[179]    0.0    0.00    0.00       7         void std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> >::_M_emplace_back_aux<nnp::SymmetryFunctionGroup*>(nnp::SymmetryFunctionGroup*&&) [179]
-----------------------------------------------
                0.00    0.00       1/6           nnp::Mode::setupElementMap() [91]
                0.00    0.00       1/6           nnp::Mode::setupCutoff() [92]
                0.00    0.00       1/6           nnp::Mode::setupElements() [88]
                0.00    0.00       3/6           nnp::Mode::setupNeuralNetwork() [89]
[180]    0.0    0.00    0.00       6         nnp::Settings::operator[](std::string const&) const [180]
                0.00    0.00      12/21          std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const [165]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::setupSymmetryFunctionGroups() [21]
[181]    0.0    0.00    0.00       5         nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
                0.00    0.00     119/175         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [134]
                0.00    0.00      17/17          void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [166]
                0.00    0.00      17/33          void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&) [157]
                0.00    0.00      10/10          std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool) [171]
                0.00    0.00       5/5           void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.185] [190]
                0.00    0.00       5/5           void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.197] [189]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::setScalingNone() const [80]
[182]    0.0    0.00    0.00       5         nnp::SymmetryFunctionGroupAngularNarrow::setScalingFactors() [182]
                0.00    0.00       5/139         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [135]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::setupSymmetryFunctionGroups() [21]
[183]    0.0    0.00    0.00       5         nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&) [183]
                0.00    0.00      45/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00       5/9           nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::~Element() [185]
[184]    0.0    0.00    0.00       5         nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [184]
                0.00    0.00      10/75          std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [140]
                0.00    0.00       5/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00       5/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
                0.00    0.00       2/5           nnp::PredictionES::~PredictionES() [365]
                0.00    0.00       2/5           nnp::Mode::setupElements() [88]
[185]    0.0    0.00    0.00       5         nnp::Element::~Element() [185]
                0.00    0.00      32/32          nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [159]
                0.00    0.00      25/25          nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [163]
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [184]
                0.00    0.00       5/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00       5/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
                0.00    0.00       5/5           std::_Rb_tree<unsigned long, std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container>, std::_Select1st<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >*) [188]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [194]
                0.00    0.00       2/2           nnp::NeuralNetwork::~NeuralNetwork() [205]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::infoSymmetryFunctionGroups() const [216]
[186]    0.0    0.00    0.00       5         nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00      30/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00      25/57          nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
                0.00    0.00      20/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
                0.00    0.00      15/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00       5/9           nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
-----------------------------------------------
                0.00    0.00       5/5           std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::~map() [750]
[187]    0.0    0.00    0.00       5         std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*) [187]
-----------------------------------------------
                0.00    0.00       5/5           nnp::Element::~Element() [185]
[188]    0.0    0.00    0.00       5         std::_Rb_tree<unsigned long, std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container>, std::_Select1st<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >*) [188]
-----------------------------------------------
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[189]    0.0    0.00    0.00       5         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.197] [189]
                0.00    0.00      40/181         nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const [133]
-----------------------------------------------
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [181]
[190]    0.0    0.00    0.00       5         void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.185] [190]
-----------------------------------------------
                0.00    0.00       4/4           nnp::Element::setupSymmetryFunctionGroups() [21]
[191]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
                0.00    0.00      32/175         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [134]
                0.00    0.00      16/33          void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&) [157]
                0.00    0.00       4/4           void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.139] [198]
                0.00    0.00       4/4           void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.151] [197]
-----------------------------------------------
                0.00    0.00       4/4           nnp::Element::setScalingNone() const [80]
[192]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::setScalingFactors() [192]
                0.00    0.00       4/139         std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&) [135]
-----------------------------------------------
                0.00    0.00       4/4           nnp::Element::setupSymmetryFunctionGroups() [21]
[193]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&) [193]
                0.00    0.00      20/773         std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&) [129]
                0.00    0.00       4/9           nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [172]
-----------------------------------------------
                0.00    0.00       4/4           nnp::Element::~Element() [185]
[194]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [194]
                0.00    0.00       8/75          std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [140]
                0.00    0.00       4/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00       4/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
-----------------------------------------------
                0.00    0.00       4/4           nnp::Element::infoSymmetryFunctionGroups() const [216]
[195]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
                0.00    0.00      36/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00      32/57          nnp::SymmetryFunctionGroup::getPrintFormatMember() const [154]
                0.00    0.00      20/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
                0.00    0.00       8/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00       4/9           nnp::SymmetryFunctionGroup::getPrintFormatCommon() const [173]
-----------------------------------------------
                0.00    0.00       4/4           void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153] [226]
[196]    0.0    0.00    0.00       4         nnp::SymmetryFunctionGroupRadial::operator<(nnp::SymmetryFunctionGroup const&) const [196]
-----------------------------------------------
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
[197]    0.0    0.00    0.00       4         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.151] [197]
                0.00    0.00      56/238         nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const [132]
-----------------------------------------------
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::sortMembers() [191]
[198]    0.0    0.00    0.00       4         void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.139] [198]
-----------------------------------------------
                0.00    0.00       1/3           nnp::PredictionES::predict() [37]
                0.00    0.00       1/3           nnp::PredictionES::getdDipole() [42]
                0.00    0.00       1/3           nnp::PredictionES::getHighDerivatives(int, int) [1]
[199]    0.0    0.00    0.00       3         nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool) [199]
-----------------------------------------------
                0.00    0.00       1/3           nnp::Mode::setupDFTD3() [255]
                0.00    0.00       2/3           nnp::Mode::Mode() [257]
[200]    0.0    0.00    0.00       3         nnp::DFTD3::DFTD3() [200]
-----------------------------------------------
                0.00    0.00       1/3           nnp::PredictionES::predict() [37]
                0.00    0.00       1/3           nnp::PredictionES::getdDipole() [42]
                0.00    0.00       1/3           nnp::PredictionES::getHighDerivatives(int, int) [1]
[201]    0.0    0.00    0.00       3         nnp::Mode::calculateCharge(nnp::Structure&) const [201]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupNeuralNetworkWeights(std::string const&) [62]
[202]    0.0    0.00    0.00       2         nnp::NeuralNetwork::setConnections(double const* const&) [202]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupNeuralNetwork() [89]
[203]    0.0    0.00    0.00       2         nnp::NeuralNetwork::setNormalizeNeurons(bool) [203]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupNeuralNetwork() [89]
[204]    0.0    0.00    0.00       2         nnp::NeuralNetwork::NeuralNetwork(int, int const* const&, nnp::NeuralNetwork::ActivationFunction const* const&) [204]
                0.00    0.00       8/8           nnp::NeuralNetwork::allocateLayer(nnp::NeuralNetwork::Layer&, int, int, nnp::NeuralNetwork::ActivationFunction) [176]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Element::~Element() [185]
[205]    0.0    0.00    0.00       2         nnp::NeuralNetwork::~NeuralNetwork() [205]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
[206]    0.0    0.00    0.00       2         nnp::SymmetryFunctionStatistics::SymmetryFunctionStatistics() [206]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[207]    0.0    0.00    0.00       2         nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [207]
                0.00    0.00      57/123         nnp::CutoffFunction::setCutoffParameter(double) [136]
                0.00    0.00      57/57          nnp::SymmetryFunction::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [151]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[208]    0.0    0.00    0.00       2         nnp::Element::sortSymmetryFunctions() [208]
                0.00    0.00     140/181         nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const [133]
                0.00    0.00       2/2           void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
                0.00    0.00       2/2           void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.168] [225]
-----------------------------------------------
                0.00    0.00       2/2           void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
[209]    0.0    0.00    0.00       2         nnp::Element::Element(nnp::Element const&) [209]
                0.00    0.00       2/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       2/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupElements() [88]
[210]    0.0    0.00    0.00       2         nnp::Element::Element(unsigned long, nnp::ElementMap const&) [210]
                0.00    0.00       4/9890        nnp::ElementMap::symbol(unsigned long) const [113]
                0.00    0.00       2/2           nnp::SymmetryFunctionStatistics::SymmetryFunctionStatistics() [206]
                0.00    0.00       2/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       2/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00       2/8           nnp::ElementMap::atomicNumber(std::string const&) [175]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupNeuralNetwork() [89]
[211]    0.0    0.00    0.00       2         nnp::NeuralNetwork::info() const [211]
                0.00    0.00     232/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00      15/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
-----------------------------------------------
                0.00    0.00       1/2           nnp::PredictionES::getdDipole() [42]
                0.00    0.00       1/2           nnp::PredictionES::getHighDerivatives(int, int) [1]
[212]    0.0    0.00    0.00       2         nnp::Mode::calculateDipole(nnp::Structure&) const [212]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[213]    0.0    0.00    0.00       2         nnp::Element::getMinNeighbors() const [213]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[214]    0.0    0.00    0.00       2         nnp::Element::getMaxCutoffRadius() const [214]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[215]    0.0    0.00    0.00       2         nnp::Element::getMinCutoffRadius() const [215]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctionGroups() [22]
[216]    0.0    0.00    0.00       2         nnp::Element::infoSymmetryFunctionGroups() const [216]
                0.00    0.00       9/9           void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag) [174]
                0.00    0.00       5/5           nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const [186]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::parameterLines() const [195]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupSymmetryFunctions() [77]
[217]    0.0    0.00    0.00       2         nnp::Element::infoSymmetryFunctionParameters() const [217]
                0.00    0.00      32/32          nnp::SymmetryFunctionRadial::parameterLine() const [160]
                0.00    0.00      25/25          nnp::SymmetryFunctionAngularNarrow::parameterLine() const [164]
                0.00    0.00      12/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
-----------------------------------------------
                0.00    0.00       1/2           nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00       1/2           nnp::Mode::setupElements() [88]
[218]    0.0    0.00    0.00       2         nnp::Settings::getValues(std::string const&) const [218]
                0.00    0.00       2/21          std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const [165]
                0.00    0.00       2/67          std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::equal_range(std::string const&) const [145]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupElements() [88]
[219]    0.0    0.00    0.00       2         void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&) [219]
                0.00    0.00       2/2           nnp::Element::Element(nnp::Element const&) [209]
                0.00    0.00       1/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       1/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00       1/5           nnp::Element::~Element() [185]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Mode::setupNeuralNetwork() [89]
[220]    0.0    0.00    0.00       2         std::vector<std::string, std::allocator<std::string> >::~vector() [220]
-----------------------------------------------
                0.00    0.00       1/2           nnp::Mode::setupSymmetryFunctions() [77]
                0.00    0.00       1/2           nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
[221]    0.0    0.00    0.00       2         std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [221]
-----------------------------------------------
                0.00    0.00       2/2           std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, std::string> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<std::string, std::string> > >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&) [161]
[222]    0.0    0.00    0.00       2         std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_get_insert_unique_pos(std::string const&) [222]
-----------------------------------------------
                0.00    0.00       2/2           nnp::ElementMap::registerElements(std::string const&) [90]
[223]    0.0    0.00    0.00       2         std::_Rb_tree_iterator<std::pair<std::string const, unsigned long> > std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<std::string const&>&&, std::tuple<>&&) [223]
                0.00    0.00       1/1           std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_get_insert_unique_pos(std::string const&) [269]
-----------------------------------------------
                0.00    0.00       2/2           nnp::ElementMap::registerElements(std::string const&) [90]
[224]    0.0    0.00    0.00       2         std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, std::string> >, unsigned long const&) [224]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Element::sortSymmetryFunctions() [208]
[225]    0.0    0.00    0.00       2         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.168] [225]
                0.00    0.00     120/238         nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const [132]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Element::setupSymmetryFunctionGroups() [21]
[226]    0.0    0.00    0.00       2         void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153] [226]
                0.00    0.00      13/13          nnp::SymmetryFunctionGroupAngularNarrow::operator<(nnp::SymmetryFunctionGroup const&) const [168]
                0.00    0.00       4/4           nnp::SymmetryFunctionGroupRadial::operator<(nnp::SymmetryFunctionGroup const&) const [196]
-----------------------------------------------
                                   2             void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
                0.00    0.00       2/2           nnp::Element::sortSymmetryFunctions() [208]
[227]    0.0    0.00    0.00       2+2       void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
                0.00    0.00      62/238         nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const [132]
                0.00    0.00       1/181         nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const [133]
                                   2             void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156] [227]
-----------------------------------------------
                0.00    0.00       2/2           nnp::Element::setupSymmetryFunctionGroups() [21]
[228]    0.0    0.00    0.00       2         void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.141] [228]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[229]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z22createKnownKeywordsMapv [229]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[230]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6timingRdS_ [230]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[231]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp10ElementMap13knownElementsE [231]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[232]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp10new1DtableEi [232]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[233]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp11DerivativesC2Ev [233]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[234]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp12PredictionESC2Ev [234]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[235]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp13NeuralNetworkC2EiRKPKiRKPKNS0_18ActivationFunctionE [235]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[236]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp16SymmetryFunction11sfinfoWidthE [236]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[237]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp21SymmetryFunctionGroup11printFormatE [237]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[238]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp22SymmetryFunctionRadialC2ERKNS_10ElementMapE [238]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[239]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionAngularWideC2ERKNS_10ElementMapE [239]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[240]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionGroupRadialC2ERKNS_10ElementMapE [240]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[241]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp29SymmetryFunctionAngularNarrowC2ERKNS_10ElementMapE [241]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[242]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp30SymmetryFunctionWeightedRadialC2ERKNS_10ElementMapE [242]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[243]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp31SymmetryFunctionWeightedAngularC2ERKNS_10ElementMapE [243]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[244]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp32SymmetryFunctionGroupAngularWideC2ERKNS_10ElementMapE [244]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[245]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp34SymmetryFunctionGroupAngularNarrowC2ERKNS_10ElementMapE [245]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[246]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp35SymmetryFunctionGroupWeightedRadialC2ERKNS_10ElementMapE [246]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[247]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp36SymmetryFunctionGroupWeightedAngularC2ERKNS_10ElementMapE [247]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[248]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp3LogC2Ev [248]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[249]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp4ModeC2Ev [249]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[250]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp5DFTD3C2Ev [250]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[251]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp7ElementC2EmRKNS_10ElementMapE [251]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [819]
[252]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN3nnp9StructureC2Ev [252]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::Mode() [257]
[253]    0.0    0.00    0.00       1         nnp::Log::Log() [253]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::setup() [17]
[254]    0.0    0.00    0.00       1         nnp::Mode::initialize() [254]
                0.00    0.00      12/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       1/10167       nnp::strpr(char const*, ...) [110]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[255]    0.0    0.00    0.00       1         nnp::Mode::setupDFTD3() [255]
                0.00    0.00       1/7           nnp::Settings::keywordExists(std::string const&) const [178]
                0.00    0.00       1/3           nnp::DFTD3::DFTD3() [200]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::setupGeneric() [18]
[256]    0.0    0.00    0.00       1         nnp::Mode::setupNormalization() [256]
                0.00    0.00       5/9868        nnp::Log::operator<<(std::string const&) [114]
                0.00    0.00       4/7           nnp::Settings::keywordExists(std::string const&) const [178]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::PredictionES() [364]
[257]    0.0    0.00    0.00       1         nnp::Mode::Mode() [257]
                0.00    0.00       2/3           nnp::DFTD3::DFTD3() [200]
                0.00    0.00       1/1           nnp::Log::Log() [253]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Settings::parseLines() [83]
[258]    0.0    0.00    0.00       1         nnp::Settings::sanityCheck() [258]
                0.00    0.00      65/67          std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::equal_range(std::string const&) const [145]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::loadSettingsFile(std::string const&) [82]
[259]    0.0    0.00    0.00       1         nnp::Settings::loadFile(std::string const&) [259]
                0.00    0.00       1/1           nnp::Settings::readFile() [260]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Settings::loadFile(std::string const&) [259]
[260]    0.0    0.00    0.00       1         nnp::Settings::readFile() [260]
                0.00    0.00       9/23107       void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&) [109]
                0.00    0.00       2/10167       nnp::strpr(char const*, ...) [110]
                0.00    0.00       2/80          void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&) [139]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::readStructureFromFile(std::string const&) [39]
[261]    0.0    0.00    0.00       1         nnp::Structure::setElementMap(nnp::ElementMap const&) [261]
                0.00    0.00       1/74          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [141]
                0.00    0.00       1/72          std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*) [143]
                0.00    0.00       1/74          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [142]
                0.00    0.00       1/72          std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*) [144]
                0.00    0.00       1/2           std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&) [221]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [75]
[262]    0.0    0.00    0.00       1         nnp::Structure::calculateInverseBox() [262]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::readStructureFromFile(std::string const&) [39]
[263]    0.0    0.00    0.00       1         nnp::Structure::reset() [263]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::PredictionES() [364]
[264]    0.0    0.00    0.00       1         nnp::Structure::Structure() [264]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::getHighDerivatives(int, int) [1]
[265]    0.0    0.00    0.00       1         nnp::Mode::computeHighDerivativesDipole(nnp::Structure&, int, int) const [265]
-----------------------------------------------
                0.00    0.00       1/1           nnp::Mode::loadSettingsFile(std::string const&) [82]
[266]    0.0    0.00    0.00       1         nnp::Settings::info() const [266]
-----------------------------------------------
                0.00    0.00       1/1           nnp::PredictionES::~PredictionES() [365]
[267]    0.0    0.00    0.00       1         std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, unsigned long> > >*) [267]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree_iterator<std::pair<std::string const, std::string> > std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string> >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&) [149]
[268]    0.0    0.00    0.00       1         std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_get_insert_unique_pos(std::string const&) [268]
-----------------------------------------------
                0.00    0.00       1/1           std::_Rb_tree_iterator<std::pair<std::string const, unsigned long> > std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<std::string const&>&&, std::tuple<>&&) [223]
[269]    0.0    0.00    0.00       1         std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_get_insert_unique_pos(std::string const&) [269]
-----------------------------------------------
                0.00    0.00       1/1           nnp::ElementMap::registerElements(std::string const&) [90]
[270]    0.0    0.00    0.00       1         void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)) [clone .constprop.93] [270]
                0.00    0.00       4/8           nnp::ElementMap::atomicNumber(std::string const&) [175]
-----------------------------------------------
                0.00    0.00       1/1           nnp::ElementMap::registerElements(std::string const&) [90]
[271]    0.0    0.00    0.00       1         void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)) [clone .constprop.81] [271]
-----------------------------------------------
                                  29             std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, std::string> > >*) [766]
[766]    0.0    0.00    0.00       0+29      std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, std::string> > >*) [766]
                                  29             std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, std::string> > >*) [766]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [229] _GLOBAL__sub_I__Z22createKnownKeywordsMapv [193] nnp::SymmetryFunctionGroupRadial::SymmetryFunctionGroupRadial(nnp::ElementMap const&) [173] nnp::SymmetryFunctionGroup::getPrintFormatCommon() const
 [230] _GLOBAL__sub_I__Z6timingRdS_ [194] nnp::SymmetryFunctionGroupRadial::~SymmetryFunctionGroupRadial() [154] nnp::SymmetryFunctionGroup::getPrintFormatMember() const
 [231] _GLOBAL__sub_I__ZN3nnp10ElementMap13knownElementsE [86] nnp::SymmetryFunctionAngularNarrow::setParameters(std::string const&) [160] nnp::SymmetryFunctionRadial::parameterLine() const
 [232] _GLOBAL__sub_I__ZN3nnp10new1DtableEi [162] nnp::SymmetryFunctionAngularNarrow::SymmetryFunctionAngularNarrow(nnp::ElementMap const&) [30] nnp::SymmetryFunctionRadial::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const
 [233] _GLOBAL__sub_I__ZN3nnp11DerivativesC2Ev [163] nnp::SymmetryFunctionAngularNarrow::~SymmetryFunctionAngularNarrow() [132] nnp::SymmetryFunctionRadial::operator<(nnp::SymmetryFunction const&) const
 [234] _GLOBAL__sub_I__ZN3nnp12PredictionESC2Ev [181] nnp::SymmetryFunctionGroupAngularNarrow::sortMembers() [195] nnp::SymmetryFunctionGroupRadial::parameterLines() const
 [235] _GLOBAL__sub_I__ZN3nnp13NeuralNetworkC2EiRKPKiRKPKNS0_18ActivationFunctionE [182] nnp::SymmetryFunctionGroupAngularNarrow::setScalingFactors() [76] nnp::SymmetryFunctionGroupRadial::calculate(nnp::Atom&, bool) const
 [236] _GLOBAL__sub_I__ZN3nnp16SymmetryFunction11sfinfoWidthE [19] nnp::SymmetryFunctionGroupAngularNarrow::addMember(nnp::SymmetryFunction const*) [196] nnp::SymmetryFunctionGroupRadial::operator<(nnp::SymmetryFunctionGroup const&) const
 [237] _GLOBAL__sub_I__ZN3nnp21SymmetryFunctionGroup11printFormatE [183] nnp::SymmetryFunctionGroupAngularNarrow::SymmetryFunctionGroupAngularNarrow(nnp::ElementMap const&) [164] nnp::SymmetryFunctionAngularNarrow::parameterLine() const
 [238] _GLOBAL__sub_I__ZN3nnp22SymmetryFunctionRadialC2ERKNS_10ElementMapE [184] nnp::SymmetryFunctionGroupAngularNarrow::~SymmetryFunctionGroupAngularNarrow() [3] nnp::SymmetryFunctionAngularNarrow::computeDerivatives(nnp::Atom&, nnp::Derivatives&) const
 [239] _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionAngularWideC2ERKNS_10ElementMapE [111] nnp::Log::addLogEntry(std::string const&) [133] nnp::SymmetryFunctionAngularNarrow::operator<(nnp::SymmetryFunction const&) const
 [240] _GLOBAL__sub_I__ZN3nnp27SymmetryFunctionGroupRadialC2ERKNS_10ElementMapE [253] nnp::Log::Log() [186] nnp::SymmetryFunctionGroupAngularNarrow::parameterLines() const
 [241] _GLOBAL__sub_I__ZN3nnp29SymmetryFunctionAngularNarrowC2ERKNS_10ElementMapE [114] nnp::Log::operator<<(std::string const&) [24] nnp::SymmetryFunctionGroupAngularNarrow::calculate(nnp::Atom&, bool) const
 [242] _GLOBAL__sub_I__ZN3nnp30SymmetryFunctionWeightedRadialC2ERKNS_10ElementMapE [177] nnp::Log::operator<<(std::vector<std::string, std::allocator<std::string> > const&) [168] nnp::SymmetryFunctionGroupAngularNarrow::operator<(nnp::SymmetryFunctionGroup const&) const
 [243] _GLOBAL__sub_I__ZN3nnp31SymmetryFunctionWeightedAngularC2ERKNS_10ElementMapE [105] nnp::Atom::Neighbor::Neighbor() [67] nnp::Atom::getNumNeighbors(double) const
 [244] _GLOBAL__sub_I__ZN3nnp32SymmetryFunctionGroupAngularWideC2ERKNS_10ElementMapE [155] nnp::Atom::allocate(bool) [44] nnp::Mode::computedDipole(nnp::Structure&) const
 [245] _GLOBAL__sub_I__ZN3nnp34SymmetryFunctionGroupAngularNarrowC2ERKNS_10ElementMapE [125] nnp::Atom::Atom() [201] nnp::Mode::calculateCharge(nnp::Structure&) const
 [246] _GLOBAL__sub_I__ZN3nnp35SymmetryFunctionGroupWeightedRadialC2ERKNS_10ElementMapE [254] nnp::Mode::initialize() [212] nnp::Mode::calculateDipole(nnp::Structure&) const
 [247] _GLOBAL__sub_I__ZN3nnp36SymmetryFunctionGroupWeightedAngularC2ERKNS_10ElementMapE [255] nnp::Mode::setupDFTD3() [265] nnp::Mode::computeHighDerivativesDipole(nnp::Structure&, int, int) const
 [248] _GLOBAL__sub_I__ZN3nnp3LogC2Ev [92] nnp::Mode::setupCutoff() [2] nnp::Mode::computeHighDerivativesDipoleMem(nnp::Structure&, int) const
 [249] _GLOBAL__sub_I__ZN3nnp4ModeC2Ev [18] nnp::Mode::setupGeneric() [55] nnp::Mode::calculateAtomicChargesNeuralNetworks(nnp::Structure&, bool) const
 [250] _GLOBAL__sub_I__ZN3nnp5DFTD3C2Ev [88] nnp::Mode::setupElements() [80] nnp::Element::setScalingNone() const
 [251] _GLOBAL__sub_I__ZN3nnp7ElementC2EmRKNS_10ElementMapE [91] nnp::Mode::setupElementMap() [213] nnp::Element::getMinNeighbors() const
 [252] _GLOBAL__sub_I__ZN3nnp9StructureC2Ev [82] nnp::Mode::loadSettingsFile(std::string const&) [214] nnp::Element::getMaxCutoffRadius() const
  [72] getListPermutation(int*, int, int&) [clone .constprop.13] [89] nnp::Mode::setupNeuralNetwork() [215] nnp::Element::getMinCutoffRadius() const
 [175] nnp::ElementMap::atomicNumber(std::string const&) [256] nnp::Mode::setupNormalization() [216] nnp::Element::infoSymmetryFunctionGroups() const
  [90] nnp::ElementMap::registerElements(std::string const&) [77] nnp::Mode::setupSymmetryFunctions() [217] nnp::Element::infoSymmetryFunctionParameters() const
 [104] nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, double) [62] nnp::Mode::setupNeuralNetworkWeights(std::string const&) [23] nnp::Element::calculateSymmetryFunctionGroups(nnp::Atom&, bool) const
  [43] nnp::Derivatives::addDerives(nnp::Derivatives const&, int, int, int, double) [22] nnp::Mode::setupSymmetryFunctionGroups() [178] nnp::Settings::keywordExists(std::string const&) const
  [49] nnp::Derivatives::computed3fu(double const*, nnp::Derivatives const&) [199] nnp::Mode::calculateSymmetryFunctionGroups(nnp::Structure&, bool) [266] nnp::Settings::info() const
  [45] nnp::Derivatives::computed4fu(double const*, nnp::Derivatives const&) [81] nnp::Mode::setupSymmetryFunctionScalingNone() [218] nnp::Settings::getValues(std::string const&) const
   [6] nnp::Derivatives::computednfc(nnp::CutoffFunction const&, double const*, double const*, double const*) [257] nnp::Mode::Mode() [180] nnp::Settings::operator[](std::string const&) const
  [11] nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [200] nnp::DFTD3::DFTD3() [123] std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::find(std::string const&) const
  [26] nnp::Derivatives::computednfc(nnp::CutoffFunction const&, int, double const*) [clone .constprop.17] [65] nnp::split(std::string const&, char) [120] std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::find(std::string const&) const
  [29] nnp::Derivatives::computednfu(double const*, nnp::Derivatives const&) [110] nnp::strpr(char const*, ...) [145] std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::equal_range(std::string const&) const
  [35] nnp::Derivatives::build9VFrom6V(int, nnp::Derivatives&) [64] nnp::reduce(std::string const&, std::string const&, std::string const&) [165] std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::find(std::string const&) const
  [12] nnp::Derivatives::computecosijk(double const*, double const*) [207] nnp::Element::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [116] std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::find(std::string const&) const
  [73] nnp::Derivatives::computecosijk(double, double, double const*, double const*) [78] nnp::Element::addSymmetryFunction(std::string const&, unsigned long const&) [150] std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::operator[](std::string&&)
  [57] nnp::Derivatives::computednRijk(double const*, double const*) [208] nnp::Element::sortSymmetryFunctions() [61] void std::vector<nnp::Atom::Neighbor, std::allocator<nnp::Atom::Neighbor> >::_M_emplace_back_aux<nnp::Atom::Neighbor>(nnp::Atom::Neighbor&&)
  [14] nnp::Derivatives::computednFzeta(nnp::Derivatives const&, double) [21] nnp::Element::setupSymmetryFunctionGroups() [128] void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::emplace_back<nnp::Atom>(nnp::Atom&&)
  [59] nnp::Derivatives::computed4Rij2_6() [209] nnp::Element::Element(nnp::Element const&) [169] void std::vector<nnp::Atom, std::allocator<nnp::Atom> >::_M_emplace_back_aux<nnp::Atom>(nnp::Atom&&)
  [10] nnp::Derivatives::computednRij2_6(double const*) [210] nnp::Element::Element(unsigned long, nnp::ElementMap const&) [119] std::vector<nnp::Vec3D, std::allocator<nnp::Vec3D> >::_M_default_append(unsigned long)
   [5] nnp::Derivatives::computednRij2pRik2pRjk2(double, double, double, double const*, double const*, double const*, double) [185] nnp::Element::~Element() [219] void std::vector<nnp::Element, std::allocator<nnp::Element> >::_M_emplace_back_aux<nnp::Element>(nnp::Element&&)
   [7] nnp::Derivatives::free() [47] nnp::pow_int(double, int) [167] void std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionRadial const* const&>(nnp::SymmetryFunctionRadial const* const&)
 [106] nnp::Derivatives::reset() [83] nnp::Settings::parseLines() [20] void std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> >::_M_emplace_back_aux<nnp::SymmetryFunctionAngularNarrow const* const&>(nnp::SymmetryFunctionAngularNarrow const* const&)
 [107] nnp::Derivatives::addTodF(nnp::Derivatives const&, nnp::Derivatives const*, int*, int) [258] nnp::Settings::sanityCheck() [170] void std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> >::_M_emplace_back_aux<nnp::SymmetryFunction*>(nnp::SymmetryFunction*&&)
  [53] nnp::Derivatives::compute(nnp::NeuralNetwork const*) [259] nnp::Settings::loadFile(std::string const&) [179] void std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> >::_M_emplace_back_aux<nnp::SymmetryFunctionGroup*>(nnp::SymmetryFunctionGroup*&&)
 [108] nnp::Derivatives::addTod1F(nnp::Derivatives const&, nnp::Derivatives const*, int*) [260] nnp::Settings::readFile() [174] void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag)
   [4] nnp::Derivatives::computeG(double, double, double, double const*, double const*, double const*, double, nnp::CutoffFunction const&) [130] std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.103] [109] void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&)
  [33] nnp::Derivatives::computeG(int, double, double const*, double, nnp::CutoffFunction const&) [131] std::pair<std::string, std::string> const& nnp::safeFind<std::string, std::pair<std::string, std::string> >(std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > > const&, std::map<std::string, std::pair<std::string, std::string>, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::key_type const&) [clone .constprop.107] [139] void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string>(std::string&&)
  [13] nnp::Derivatives::Derivatives(int, int) [121] unsigned long const& nnp::safeFind<std::string, unsigned long>(std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > > const&, std::map<std::string, unsigned long, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::key_type const&) [220] std::vector<std::string, std::allocator<std::string> >::~vector()
 [156] nnp::Derivatives::Derivatives() [112] std::string const& nnp::safeFind<unsigned long, std::string>(std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > > const&, std::map<unsigned long, std::string, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::key_type const&) [171] std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool)
  [60] nnp::Derivatives::Derivatives(nnp::Derivatives const&) [71] nnp::Structure::readFromFile(std::basic_ifstream<char, std::char_traits<char> >&) [135] std::vector<double, std::allocator<double> >::_M_fill_insert(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, unsigned long, double const&)
  [46] nnp::Derivatives::Derivatives(int) [31] nnp::Structure::readFromFile(std::string) [134] void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
  [74] nnp::Derivatives::Derivatives(int, double, double const*, double, nnp::CutoffFunction const&) [75] nnp::Structure::readFromLines(std::vector<std::string, std::allocator<std::string> > const&) [166] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  [32] nnp::Derivatives::Derivatives(int, int) [clone .constprop.26] [261] nnp::Structure::setElementMap(nnp::ElementMap const&) [221] std::vector<unsigned long, std::allocator<unsigned long> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, unsigned long const&)
  [16] nnp::Derivatives::Derivatives(int, int, double const*) [clone .constprop.19] [262] nnp::Structure::calculateInverseBox() [115] void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long const&>(unsigned long const&)
   [8] nnp::Derivatives::Derivatives(int, int, double const*, double) [38] nnp::Structure::calculateNeighborList(double) [157] void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&)
  [15] nnp::Derivatives::Derivatives(int, int, double const*, double) [clone .constprop.16] [126] nnp::Structure::remap(nnp::Atom&) [129] std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert_unique<std::string>(std::string&&)
  [56] nnp::Derivatives::~Derivatives() [263] nnp::Structure::reset() [140] std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
   [9] nnp::Derivatives::operator=(nnp::Derivatives const&) [264] nnp::Structure::Structure() [161] std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, std::string> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::pair<std::string, std::string> > >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&)
  [84] nnp::Derivatives::operator+=(nnp::Derivatives const&) [122] nnp::ElementMap::index(std::string const&) const [222] std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, std::string> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, std::string> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, std::string> > > >::_M_get_insert_unique_pos(std::string const&)
 [176] nnp::NeuralNetwork::allocateLayer(nnp::NeuralNetwork::Layer&, int, int, nnp::NeuralNetwork::ActivationFunction) [113] nnp::ElementMap::symbol(unsigned long) const [137] std::_Rb_tree_iterator<std::pair<std::string const, std::pair<std::string, unsigned long> > > std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_insert_equal<std::pair<std::string, std::pair<std::string, unsigned long> > >(std::pair<std::string, std::pair<std::string, unsigned long> >&&)
  [63] nnp::NeuralNetwork::propagateLayer(nnp::NeuralNetwork::Layer&, nnp::NeuralNetwork::Layer&) [27] nnp::Derivatives::computeSum(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [267] std::_Rb_tree<std::string, std::pair<std::string const, std::pair<std::string, unsigned long> >, std::_Select1st<std::pair<std::string const, std::pair<std::string, unsigned long> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<std::string, unsigned long> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<std::string, unsigned long> > >*)
 [202] nnp::NeuralNetwork::setConnections(double const* const&) [25] nnp::Derivatives::computeProd(nnp::Derivatives const&, nnp::Derivatives&) const [149] std::_Rb_tree_iterator<std::pair<std::string const, std::string> > std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, std::string> >, std::piecewise_construct_t const&, std::tuple<std::string&&>&&, std::tuple<>&&)
 [203] nnp::NeuralNetwork::setNormalizeNeurons(bool) [28] nnp::Derivatives::computeProd(double, nnp::Derivatives&) const [268] std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_get_insert_unique_pos(std::string const&)
  [66] nnp::NeuralNetwork::propagate() [48] nnp::Derivatives::computeSumThird(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [187] std::_Rb_tree<std::string, std::pair<std::string const, std::string>, std::_Select1st<std::pair<std::string const, std::string> >, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::string> >*)
 [204] nnp::NeuralNetwork::NeuralNetwork(int, int const* const&, nnp::NeuralNetwork::ActivationFunction const* const&) [36] nnp::Derivatives::computeProdThird(nnp::Derivatives const&, nnp::Derivatives&) const [223] std::_Rb_tree_iterator<std::pair<std::string const, unsigned long> > std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::string const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::string const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<std::string const&>&&, std::tuple<>&&)
 [205] nnp::NeuralNetwork::~NeuralNetwork() [40] nnp::Derivatives::computeSumFourth(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [269] std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_get_insert_unique_pos(std::string const&)
 [146] nnp::CutoffFunction::setCutoffType(nnp::CutoffFunction::CutoffType) [69] nnp::Derivatives::computeSumSecond(double, double, nnp::Derivatives const&, nnp::Derivatives&) const [143] std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_copy(std::_Rb_tree_node<std::pair<std::string const, unsigned long> > const*, std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*)
 [147] nnp::CutoffFunction::setCutoffRadius(double) [51] nnp::Derivatives::computeProdFourth(nnp::Derivatives const&, nnp::Derivatives&) const [141] std::_Rb_tree<std::string, std::pair<std::string const, unsigned long>, std::_Select1st<std::pair<std::string const, unsigned long> >, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, unsigned long> >*)
 [136] nnp::CutoffFunction::setCutoffParameter(double) [41] nnp::Derivatives::computeProdSecond(nnp::Derivatives const&, nnp::Derivatives&) const [188] std::_Rb_tree<unsigned long, std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container>, std::_Select1st<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, nnp::SymmetryFunctionStatistics::Container> >*)
 [148] nnp::CutoffFunction::CutoffFunction() [87] nnp::Derivatives::operator*(nnp::Derivatives const&) const [224] std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, std::string> >, unsigned long const&)
  [79] nnp::SymmetryFunction::setScalingType(nnp::SymmetryFunction::ScalingType, std::string, double, double) [58] nnp::NeuralNetwork::calculateDEdG(double*) const [144] std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_copy(std::_Rb_tree_node<std::pair<unsigned long const, std::string> > const*, std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*)
 [151] nnp::SymmetryFunction::setCutoffFunction(nnp::CutoffFunction::CutoffType, double) [52] nnp::NeuralNetwork::calculatedEdG(double**, int) const [142] std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::string>, std::_Select1st<std::pair<unsigned long const, std::string> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::string> >*)
 [152] nnp::SymmetryFunction::SymmetryFunction(unsigned long, nnp::ElementMap const&) [127] nnp::NeuralNetwork::getNumNeurons(int) const [197] void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.151]
  [68] nnp::appendLinesToFile(_IO_FILE* const&, std::vector<std::string, std::allocator<std::string> >) [54] nnp::NeuralNetwork::calculateDnEdGn(double*, double**, double***, double****) const [189] void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.197]
 [172] nnp::SymmetryFunctionGroup::SymmetryFunctionGroup(unsigned long, nnp::ElementMap const&) [211] nnp::NeuralNetwork::info() const [225] void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.168]
  [85] nnp::SymmetryFunctionRadial::setParameters(std::string const&) [117] nnp::NeuralNetwork::setInput(double const* const&) const [226] void std::__insertion_sort<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.153]
 [158] nnp::SymmetryFunctionRadial::SymmetryFunctionRadial(nnp::ElementMap const&) [118] nnp::NeuralNetwork::getOutput(double*) const [270] void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, bool (*)(std::string const&, std::string const&)) [clone .constprop.93]
 [159] nnp::SymmetryFunctionRadial::~SymmetryFunctionRadial() [70] nnp::CutoffFunction::fdfTANH(double, double&, double&) const [198] void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionRadial const**, std::vector<nnp::SymmetryFunctionRadial const*, std::allocator<nnp::SymmetryFunctionRadial const*> > >, long, bool (*)(nnp::SymmetryFunctionRadial const*, nnp::SymmetryFunctionRadial const*)) [clone .constprop.139]
 [206] nnp::SymmetryFunctionStatistics::SymmetryFunctionStatistics() [34] nnp::CutoffFunction::dnfTANHU(double, int) const [190] void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionAngularNarrow const**, std::vector<nnp::SymmetryFunctionAngularNarrow const*, std::allocator<nnp::SymmetryFunctionAngularNarrow const*> > >, long, bool (*)(nnp::SymmetryFunctionAngularNarrow const*, nnp::SymmetryFunctionAngularNarrow const*)) [clone .constprop.185]
 [191] nnp::SymmetryFunctionGroupRadial::sortMembers() [50] nnp::CutoffFunction::fdfTANHU(double, double&, double&) const [227] void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunction**, std::vector<nnp::SymmetryFunction*, std::allocator<nnp::SymmetryFunction*> > >, long, bool (*)(nnp::SymmetryFunction*, nnp::SymmetryFunction*)) [clone .constprop.156]
 [192] nnp::SymmetryFunctionGroupRadial::setScalingFactors() [153] nnp::SymmetryFunction::getPrintFormat() const [228] void std::__introsort_loop<__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)>(__gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, __gnu_cxx::__normal_iterator<nnp::SymmetryFunctionGroup**, std::vector<nnp::SymmetryFunctionGroup*, std::allocator<nnp::SymmetryFunctionGroup*> > >, long, bool (*)(nnp::SymmetryFunctionGroup*, nnp::SymmetryFunctionGroup*)) [clone .constprop.141]
 [138] nnp::SymmetryFunctionGroupRadial::addMember(nnp::SymmetryFunction const*) [124] nnp::SymmetryFunction::scale(double) const [271] void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, long, bool (*)(std::string const&, std::string const&)) [clone .constprop.81]
